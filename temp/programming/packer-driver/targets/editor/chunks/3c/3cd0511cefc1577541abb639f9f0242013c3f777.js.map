{"version":3,"sources":["file:///Users/super_javan/cocoscreator/littleBeastFight3.6/assets/Script/UIFrame/UIMgr.ts"],"names":["UIManager","director","instantiate","js","NodePool","Size","Tween","tween","view","warn","Widget","ResMgr","PriorityStake","FormType","ModalOpacity","ModalMgr","UIScreen","UIWindow","ndScreen","ndWin","allForms","createMap","screensStack","loadingForms","winArr","winMasks","screenMasks","waitNodePool","maskNodePool","getInstance","instance","on","onWinSizeChged","uiscreens","getElements","k","length","console","log","node","getComponent","updateAlignment","init","ndLoading","ndBlock","checkFormShowing","prefabPath","com","active","checkFormLoading","getMaskNode","size","maskNode","get","openScreen","params","undefined","pb","getPrefabByPath","error","loadForm","isOnleyEngross","getSize","getTopElement","closeSelf","isEngross","is3d","mask","addChild","setContentSize","screen","width","height","key","fid","onShow","showEffect","all","push","openWin","modalType","opacity","OpacityZero","getFrameSize","arr","getModelTypeComs","checkModalWinAndPopUp","closeForm","path","split","formType","FormType_Screen","exitToScreen","FormType_Fixed","FormType_Popup","FormType_Float","FormType_Win","exitToWin","FormType_Loading","FormType_Bubble","tcom","pop","nextCom","reShow","onHide","hideEffect","destroy","destoryForm","reBackMaskNode","tIdx","splice","maskPath","t","getHideEffectTime","stopAllByTarget","to","easing","call","start","put","destory","off"],"mappings":"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","sourcesContent":["import { director, instantiate, js, NodePool, Size, Tween, tween, view, warn, Widget } from \"cc\";\nimport { ResMgr } from \"../BaseManager/ResMgr\";\nimport { PriorityStake } from \"../utils/PriorityStack\";\nimport { FormType, ModalOpacity } from \"./config/SysDefine\";\nimport { ModalMgr } from \"./ModalMgr\";\nimport { UIBase } from \"./UIBase\";\nimport { UILoading, UIScreen, UIWindow } from \"./UIFrom\";\n\nexport class UIManager {\n    //全屏显示的ui挂载节点\n    private ndScreen: Node = null;\n    //能够拦截float的win\n    private ndWin: Node = null;\n\n    //所有显示的窗体\n    private allForms: { [key: string]: UIBase } = js.createMap();\n    //存储screen\n    private screensStack: PriorityStake<UIScreen> = new PriorityStake<UIScreen>();\n    private loadingForms: { [key: string]: boolean } = js.createMap();\n    private winArr: UIWindow[] = [];\n\n    //win类型的masks\n    private winMasks: { [key: string]: Node } = js.createMap();\n    //screen类型的masks\n    private screenMasks: { [key: string]: Node } = js.createMap();\n\n\n    private static instance: UIManager;\n    public static getInstance(): UIManager {\n        if (this.instance == null) {\n            this.instance = new UIManager();\n            director.on(\"winsizechanged\", this.instance.onWinSizeChged, this.instance);\n        }\n        return this.instance;\n    }\n\n    onWinSizeChged() {\n\n        let uiscreens = this.screensStack.getElements();\n        for (let k = 0; k < uiscreens.length; k++) {\n            console.log(\"窗口变化，要重新刷新一下======\");\n            uiscreens[k].node.getComponent(Widget)!.updateAlignment();\n        }\n    }\n\n    //初始化\n    public init(ndScreen: Node,\n        ndWin: Node,\n        ndLoading: Node,\n        ndBlock: Node): void {\n        this.ndScreen = ndScreen;\n        this.ndWin = ndWin;\n    }\n\n    //判断一个界面是否正在显示\n    public checkFormShowing(prefabPath: string): boolean {\n        let com = this.allForms[prefabPath];\n        if (!com) {\n            return false;\n        }\n        return com.node.active;\n    }\n    public checkFormLoading(prefabPath: string) {\n        let com = this.loadingForms[prefabPath];\n        return !!com;\n    }\n\n    private waitNodePool: NodePool = new NodePool();\n    private maskNodePool: NodePool = new NodePool();\n    private getMaskNode(): Node | null {\n        if (this.maskNodePool.size() > 0) {\n            let maskNode = this.maskNodePool.get();\n            return maskNode\n        }\n        return null;\n    }\n\n    //打开一个screen\n    public async openScreen(prefabPath: string, ...params: any): Promise<UIScreen | null> {\n        console.log(`打开openScene--${prefabPath}`);\n        if (prefabPath == null || prefabPath == undefined || prefabPath.length <= 0) {\n            warn(`${prefabPath}，参数错误`);\n            return null;\n        }\n        //当前窗体正在显示\n        if (this.checkFormShowing(prefabPath)) {\n            warn(`${prefabPath}窗体正在显示中`);\n            return null;\n        }\n        if (this.checkFormLoading(prefabPath)) {\n            warn(`${prefabPath}正在加载中`);\n            return null;\n        }\n        this.loadingForms[prefabPath] = true;\n        let pb = ResMgr.getInstance().getPrefabByPath(prefabPath);\n\n        if (pb == null) {\n            console.error(\"兼容模式 需要 去健在窗体\")\n            pb = await ResMgr.getInstance().loadForm(prefabPath)!;\n        }\n\n        if (pb == null) {\n            warn(`${prefabPath}窗体加载错误!`);\n            delete this.loadingForms[prefabPath];\n            return null;\n        }\n        let node = instantiate(pb!);\n        let com = node.getComponent(UIScreen);\n        if (com == null) {\n            warn(`${prefabPath}没有绑定UIScreen组件`);\n            delete this.loadingForms[prefabPath];\n            return null;\n        }\n\n        if (com.isOnleyEngross) {\n            //关闭掉所有的screen\n            console.log(\"关闭所有的screeen\", this.screensStack.getSize(), \"==========\");\n            while (this.screensStack.getSize() > 0) {\n                await this.screensStack.getTopElement()!.closeSelf();\n            }\n        } else if (com.isEngross) {\n            while (this.screensStack.getSize() > 0) {\n                await this.screensStack.getTopElement()!.closeSelf();\n            }\n        }\n\n        //给screen增加屏蔽层\n        if (!com.is3d) {\n            console.log(\"需要加屏蔽层========\");\n            let maskNode = this.getMaskNode();\n            if (maskNode == null) {\n                let mask = ResMgr.getInstance().getPrefabByPath(\"Lobby/Prefabs/UIMask\");\n                if (mask != null) {\n                    maskNode = instantiate(mask!);\n                }\n            }\n            if (maskNode != null) {\n                //在首次加载的时候会有问题。这个地方需要优化一下\n                this.ndScreen!.addChild(maskNode!);\n                maskNode!.setContentSize(new Size(screen.width, screen.height));\n                this.screenMasks[prefabPath] = maskNode!;\n            }\n        } else {\n            console.log(\"当前为3D场景不需要加屏蔽层\");\n            for (let key in this.screenMasks) {\n                this.screenMasks[key].active = false;\n            }\n        }\n\n        this.allForms[prefabPath] = com;\n        com.fid = prefabPath;\n        this.ndScreen!.addChild(node);\n\n        com.onShow(...params);\n        await com.showEffect();\n        if (!com.isEngross) {\n            //不独占 将其他screen active 设置为false\n            let all = this.screensStack.getElements();\n            for (let k = 0; k < all.length; k++) {\n                all[k].node.active = false;\n            }\n        }\n        //将对象保存到stack中\n        this.screensStack.push(com);\n        console.log('保存场景的堆栈数量 : !!!!!!' + this.screensStack.getSize());\n        delete this.loadingForms[prefabPath]\n        return com\n    }\n\n    //打开一个窗口\n    public async openWin(prefabPath: string, ...params: any): Promise<UIWindow | null> {\n        console.log(`打开openWin--${prefabPath}`);\n        if (prefabPath == null || prefabPath == undefined || prefabPath.length <= 0) {\n            warn(`${prefabPath}Win节点不存在`);\n            return null;\n        }\n        if (this.checkFormShowing(prefabPath)) {\n            warn(`${prefabPath}win节点正在显示中`);\n            return null;\n        }\n        if (this.checkFormLoading(prefabPath)) {\n            warn(`${prefabPath}win节点正在打开...`)\n            return null;\n        }\n        this.loadingForms[prefabPath] = true;\n        let pb = ResMgr.getInstance().getPrefabByPath(prefabPath);\n        //await this.waitFormsecond();\n        //兼容一下，暂时这么写。捕鱼的结构需要调整一下  这里要干掉否则 隐藏bug\n        if (pb == null) {\n            console.error(`${prefabPath}不存在使用了兼容模式`);\n            pb = await ResMgr.getInstance().loadForm(prefabPath);\n        }\n        if (pb == null) {\n            console.error(`${prefabPath}win节点加载失败`);\n            //如果加载失败了，则需要将节点从\n            delete this.loadingForms[prefabPath];\n            return null;\n        }\n        let node = instantiate(pb);\n        let com = node.getComponent(UIWindow);\n        if (com == null) {\n            warn(`${prefabPath}win加载没有绑定到UIWindow组件上`);\n            delete this.loadingForms[prefabPath];\n            return null;\n        }\n        if (com.modalType.opacity >= ModalOpacity.OpacityZero) {\n            console.log(\"开始获取屏蔽层的东西\");\n            let maskNode = this.getMaskNode();\n            if (maskNode == null) {\n                //有屏蔽层\n                let mask = ResMgr.getInstance().getPrefabByPath(\"Lobby/Prefabs/UIMask\");\n                maskNode = instantiate(mask!);\n            }\n            this.ndWin!.addChild(maskNode);\n            maskNode.setContentSize(new Size(view.getFrameSize().width, view.getFrameSize().height));\n            this.winMasks[prefabPath] = maskNode;\n        }\n        com.fid = prefabPath;\n        this.ndWin!.addChild(node);\n        this.winArr.push(com);\n        this.allForms[prefabPath] = com;\n        com.onShow(...params);\n        if (com.modalType.opacity >= ModalOpacity.OpacityZero) {\n            let arr: UIBase[] = this.getModelTypeComs();\n            ModalMgr.getInstance().checkModalWinAndPopUp(arr, this.winMasks, true);\n        }\n        delete this.loadingForms[prefabPath];\n        com.showEffect();\n\n        return com;\n    }\n\n    /**\n     * 关闭一个UIForm\n     * @prefabPath\n     */\n    public async closeForm(prefabPath: string): Promise<boolean> {\n        console.log(\"closeForm关闭\", prefabPath);\n        if (!prefabPath || prefabPath.length <= 0) {\n            warn(`${prefabPath}`, \"参数错误\");\n            return false;\n        }\n        let path = prefabPath.split(\"_\")[0];\n        let com = this.allForms[prefabPath];\n        if (!com && path.length == prefabPath.length) {\n            console.log(\"closeForm中的com不存在\");\n            return false;\n        }\n        // if(com == null && path.length != prefabPath.length){\n        //     for(let i = 0;i<this.bubbleMap.get(path).length;i++){\n        //         if(this.bubbleMap.get(path)[i].fid == prefabPath){\n        //             com = this.bubbleMap.get(path)[i];\n        //             break;\n        //         }\n        //     }\n        // }\n        if (!com) {\n            console.log(\"closeForm中的com不存在\");\n            return false;\n        }\n        switch (com.formType) {\n            case FormType.FormType_Screen:\n                await this.exitToScreen(prefabPath);\n                break;\n            case FormType.FormType_Fixed:\n                // await this.exitToFixed(prefabPath);\n                break;\n            case FormType.FormType_Popup:\n                // await this.exitToPopup(prefabPath);\n                break;\n            case FormType.FormType_Float:\n                // await this.exitToFloat(prefabPath);\n                break;\n            case FormType.FormType_Win:\n                await this.exitToWin(prefabPath);\n                break;\n            case FormType.FormType_Loading:\n                // await this.exitToLoading(prefabPath);\n                break;\n            case FormType.FormType_Bubble:\n                // await this.exitToBubble(prefabPath);\n                break;\n        }\n        return true;\n    }\n\n    /**\n     * screen退出\n     * @param prefabPath \n     * @returns \n     */\n    private async exitToScreen(prefabPath: string) {\n        console.log(`${prefabPath}exitToScreen`);\n        let com = this.allForms[prefabPath];\n        if (!com) {\n            return false;\n        }\n        //screen的退出必须是按照栈退出\n        let tcom = this.screensStack.pop();\n        if (tcom != com) {\n            warn(`${prefabPath}screen没有按顺序退出`);\n            return;\n        }\n        let nextCom = this.screensStack.getTopElement();\n        if (nextCom != null) {\n            nextCom.node.active = true;\n            //界面重新被激活\n            nextCom.reShow();\n        }\n        com.onHide();\n        //如果不是独占 （这里其实不用判断是否是独占，只要判定还有screen就显示出来就可以了）\n        await com.hideEffect();\n        //节点需要从父节点移除\n        com.node.destroy();\n        //com.node.removeFromParent();\n        ResMgr.getInstance().destoryForm(prefabPath);\n        delete this.allForms[prefabPath];\n        console.log(prefabPath, \"exittoscreen 成功\");\n        let maskNode = this.screenMasks[prefabPath];\n        if (maskNode != null && maskNode != undefined) {\n            if (!this.reBackMaskNode(maskNode)) {\n                maskNode.destroy();\n                ResMgr.getInstance().destoryForm(\"Lobby/Prefabs/UIMask\");\n            }\n            delete this.screenMasks[prefabPath];\n        }\n    }\n\n    /**\n     * @description:退出窗口 \n     * @param {string} prefabPath\n     */\n    private async exitToWin(prefabPath: string) {\n        let com: UIWindow | null = null;\n        let tIdx: number = -1;\n        if (this.winArr.length > 0) {\n            for (let k = 0; k < this.winArr.length; k++) {\n                if (this.winArr[k].fid == prefabPath) {\n                    tIdx = k;\n                    com = this.winArr[k];\n                    break;\n                }\n            }\n        }\n        if (tIdx >= 0 && tIdx < this.winArr.length) {\n            this.winArr.splice(tIdx, 1);\n            com!.onHide();\n            let maskPath = com!.fid;\n            let maskNode = this.winMasks[maskPath];\n            if (maskNode) {\n                let t = com!.getHideEffectTime();\n                //消失要有消失动画\n                Tween.stopAllByTarget(maskNode);\n                tween(maskNode)\n                    .to(t, { opacity: 0 }, { easing: 'linear' })\n                    // 当前面的动作都执行完毕后才会调用这个回调函数\n                    .call(() => {\n                        if (!this.reBackMaskNode(maskNode)) {\n                            maskNode.destroy();\n                            ResMgr.getInstance().destoryForm(\"Lobby/Prefabs/UIMask\");\n                        }\n                    })\n                    .start()\n            }\n            delete this.winMasks[maskPath];\n            let arr: UIBase[] = this.getModelTypeComs();\n            ModalMgr.getInstance().checkModalWinAndPopUp(arr, this.winMasks, false);\n            await com!.hideEffect();\n            com!.node.destroy();\n            ResMgr.getInstance().destoryForm(prefabPath);\n        }\n        delete this.allForms[prefabPath];\n    }\n    private reBackMaskNode(node: Node): boolean {\n        if (this.maskNodePool.size() >= 10) {\n            return false;\n        }\n        this.maskNodePool.put(node);\n        return true;\n    }\n\n    public static destory() {\n        this.instance = null!;\n        director.off(\"winsizechanged\")\n    }\n}"]}