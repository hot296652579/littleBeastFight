{"version":3,"sources":["file:///Users/super_javan/cocoscreator/littleBeastFight3.6/assets/Script/Base/ResMgr.ts"],"names":["ResMgr","_decorator","js","SpriteAtlas","sp","assetManager","error","splitFormName","ccclass","property","ResType","preloadProgressCallBack","preloadCompleteCallBack","subGameBundle","Map","loadPrefabWithBundleKey","loadSpriteFrameWithBundleKey","loadSpriteAtlasWithBundleKey","loadAudioClipWithBundleKey","loadSpineWithBundleKey","loadProgress","createMap","getInstance","instance","preloadBundleOnly","bundleName","Promise","resolve","reject","has","loadBundle","err","bundle","set","preLoad","list","progressCb","completeCallBack","resType","undefined","size","ResType_Prefab","ResType_AudioClip","map","idx","key","keys","get","setTimeout","preloadBundlePrefab","ResType_SpriteFrame","preloadBunleSpriteFrame","ResType_SpriteAtlas","preloadBundleSpriteAtlas","ResType_Spine","preloadBundleSpine","preloadBundleAudioClip","calProgress","filePath","data","spriteFrameName","prefabName","console","load","loadCnt","allCnt","item","spriteFrame","log","addRef","getSpriteFrameByPath","path","destorySpriteFrameByPath","refCount","decRef","formName","prefab","warn","getPrefabByPath","destoryPrefabByPath","spriteAtlasName","spriteAtlas","getSpriteAtlasByPath","destorySpriteAtlasByPath","skeletionData","lazyLoadySpine","fileName","getBundle","SkeletonData","spine","destorySpineByPath","audioClipName","clip","getAudioClipByPath","destoryAudioClipByPath","releaseAllResByList","bName","resData","delete","releaseAll","removeBundle","state","progress","loadForm","length","destoryForm"],"mappings":"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","sourcesContent":["/**资源加载管理器 */\nimport { _decorator, Component, Node, js, Prefab, SpriteFrame, SpriteAtlas, AudioClip, sp, AssetManager, assetManager, error } from 'cc';\nimport { splitFormName } from '../Utils/Utils';\nconst { ccclass, property } = _decorator;\n\n/**\n * 资源类型\n */\nexport enum ResType {\n\n    ResType_UnKnow = 0,                    //位置类型 该种资源不处理\n    ResType_SpriteFrame = 1,                //图片资源 输出类型为 spriteFrame\n    ResType_SpriteAtlas = 2,                //图集资源 输出类型为 SpriteAtlas 通过->getSpriteFrame() 能够获取对应的SpriteFrame 要求图集 plist和png的名字除了后缀是一样的\n    ResType_AudioClip = 3,                  //音频资源 输出类型为 AudioClip   \n    ResType_Prefab = 4,                     //预制体   输出类型为 Prefab\n    ResType_Spine = 5,                      //骨骼动画资源 输出类型为 sp.SkeletionnData 要求三种资源类型必须一致\n    ResType_Fnt = 6,                        //字体资源类型 输出格式为 LabelAtlas 要求 字体 fnt文件和png文件的名字除了后缀必须一致\n    ResType_Animation = 7,                  //动画资源   输出格式为AnimationClip\n\n    //一下几种是需要扩展的，以后会用到的。但是本次不准备实现\n    ResType_Material = 8,                  //材质\n    ResType_Shader = 9,                     //shader 高级效果展示，资源缓存的时候暂时不处理\n\n    //粒子特效  粒子特效也可以动态加载进去。\n    ResType_Particle = 10,                  //粒子特效\n}\n\nexport class ResMgr {\n    private static instance: ResMgr;\n    public static getInstance() {\n        if (this.instance == null) {\n            this.instance = new ResMgr();\n        }\n\n        return this.instance\n    }\n\n    private preloadProgressCallBack: Function | null = null;\n    private preloadCompleteCallBack: Function | null = null;\n    private subGameBundle: Map<string, AssetManager.Bundle> = new Map<string, AssetManager.Bundle>();\n\n    /**\n     * @description: 需要加载到内存中的  以后先从内存中获取\n    */\n    //预设资源\n    private loadPrefabWithBundleKey: Map<string, Map<string, Prefab>> = new Map<string, Map<string, Prefab>>();\n    //SpriteFrame资源\n    private loadSpriteFrameWithBundleKey: Map<string, Map<string, SpriteFrame>> = new Map<string, Map<string, SpriteFrame>>();\n    //合图的图集资源\n    private loadSpriteAtlasWithBundleKey: Map<string, Map<string, SpriteAtlas>> = new Map<string, Map<string, SpriteAtlas>>();\n    //音频资源\n    private loadAudioClipWithBundleKey: Map<string, Map<string, AudioClip>> = new Map<string, Map<string, AudioClip>>();\n    //spine动画资源\n    private loadSpineWithBundleKey: Map<string, Map<string, sp.SkeletonData>> = new Map<string, Map<string, sp.SkeletonData>>();\n    private loadProgress: { [key: string]: number } = js.createMap();\n\n    /**\n     * @description: 仅仅加载bunle。主要用途为：子游戏在进入之前，要先加载bundle，然后才能执行对应的逻辑\n    大厅字游戏必须保证 大厅对子游戏没有资源和代码引用。\n    子游戏可以引用大厅的逻辑代码和资源\n    */\n    public preloadBundleOnly(bundleName: string): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            if (this.subGameBundle.has(bundleName)) {\n                resolve(true);\n                return;\n            }\n            assetManager.loadBundle(bundleName, (err, bundle: AssetManager.Bundle) => {\n                if (err != null) {\n                    resolve(false);\n                    return;\n                }\n                this.subGameBundle.set(bundleName, bundle);\n                resolve(true);\n            });\n        });\n    }\n\n    /**\n     * @description: 加载list里面对应的每个文件(预设,spriteFrame,图集,音频等)\n     * @param {Map} list\n     * @param {*} number\n     * @param {Function} progressCb\n     * @param {Function} completeCallBack\n     * @param {*} resType\n     * @param {*} boolean\n     */\n    public async preLoad(list: Map<string, number>, progressCb: Function, completeCallBack: Function, resType?: & Map<ResType, boolean>) {\n        if (resType == null || resType == undefined) {\n            resType = new Map<ResType, boolean>();\n        }\n        if (resType.size == 0) {\n            resType!.set(ResType.ResType_Prefab, true);\n            resType!.set(ResType.ResType_AudioClip, true);\n        }\n        this.preloadProgressCallBack = progressCb;\n        this.preloadCompleteCallBack = completeCallBack;\n        this.loadProgress = js.createMap();\n        let map = list;\n        let idx = 0;\n        for (let key of map.keys()) {\n            idx++;\n            if (map.get(key) == ResType.ResType_Prefab &&\n                resType!.has(ResType.ResType_Prefab) &&\n                resType!.get(ResType.ResType_Prefab)) {\n                //加载 预制体 prefab\n                this.loadProgress[key] = 0;\n                setTimeout(() => {\n                    this.preloadBundlePrefab(key);\n                }, 0);\n            }\n            else if (map.get(key) == ResType.ResType_SpriteFrame &&\n                resType!.has(ResType.ResType_SpriteFrame) &&\n                resType!.get(ResType.ResType_SpriteFrame)) {\n                //图片 spriteFrame\n                this.loadProgress[key] = 0;\n                setTimeout(() => {\n                    this.preloadBunleSpriteFrame(key);\n                }, 0);\n\n            } else if (map.get(key) == ResType.ResType_SpriteAtlas &&\n                resType!.has(ResType.ResType_SpriteAtlas) &&\n                resType!.get(ResType.ResType_SpriteAtlas)\n            ) {\n                //图集 spriteAtlas\n                this.loadProgress[key] = 0;\n                setTimeout(() => {\n                    this.preloadBundleSpriteAtlas(key);\n                }, 0);\n\n            } else if (map.get(key) == ResType.ResType_Spine &&\n                resType!.has(ResType.ResType_Spine) &&\n                resType!.get(ResType.ResType_Spine)\n            ) {\n                //spine\n                this.loadProgress[key] = 0;\n                setTimeout(() => {\n                    this.preloadBundleSpine(key);\n                }, 0);\n            } else if (map.get(key) == ResType.ResType_AudioClip &&\n                resType!.has(ResType.ResType_AudioClip) &&\n                resType!.get(ResType.ResType_AudioClip)\n            ) {\n                //音频资源 AudioClip\n                this.loadProgress[key] = 0;\n                setTimeout(() => {\n                    this.preloadBundleAudioClip(key);\n                }, 0);\n            }\n        }\n        setTimeout(() => {\n            this.calProgress(1);\n        }, 200);\n    }\n\n    /**\n     * @description: 预加载bundle对应的 SpriteFrame\n     * @param {string} formName\n     */\n    public async preloadBunleSpriteFrame(filePath: string) {\n        let data = splitFormName(filePath);\n        let bundleName = data.bundle;\n        //单个资源如果要读取到spriteFrame，必须后边加上spriteFrame路径\n        let spriteFrameName = data.prefabName;\n\n\n        if (this.loadSpriteFrameWithBundleKey.has(bundleName) && this.loadSpriteFrameWithBundleKey.get(bundleName)?.has(filePath)) {\n            this.loadProgress[filePath] = 1;\n            this.calProgress(2);\n            return;\n        }\n        let bundle = this.subGameBundle.get(bundleName);\n        if (bundle == undefined) {\n            console.error(`${bundleName}不存在`);\n            return;\n        }\n        if (!this.loadSpriteFrameWithBundleKey.has(bundleName)) {\n            this.loadSpriteFrameWithBundleKey.set(bundleName, new Map<string, SpriteFrame>());\n        }\n        bundle.load<SpriteFrame>(spriteFrameName, (loadCnt: number, allCnt: number, item: AssetManager.RequestItem) => {\n            this.loadProgress[filePath] = loadCnt / allCnt;\n            this.calProgress(0);\n        }, (err, spriteFrame: SpriteFrame) => {\n            if (err != null) {\n                console.log(err);\n                console.error(`${filePath}加载失败`);\n            } else {\n                this.loadProgress[filePath] = 1;\n                if (!this.loadSpriteFrameWithBundleKey.has(bundleName)) {\n                    this.loadSpriteFrameWithBundleKey.set(bundleName, new Map<string, SpriteFrame>());\n                }\n                this.loadSpriteFrameWithBundleKey.get(bundleName)!.set(filePath, spriteFrame);\n                this.loadSpriteFrameWithBundleKey.get(bundleName)!.get(filePath)!.addRef();\n                this.calProgress(1);\n            }\n        })\n    }\n    public getSpriteFrameByPath(path: string): SpriteFrame | null {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadSpriteFrameWithBundleKey.has(bundleName) && this.loadSpriteFrameWithBundleKey.get(bundleName)!.has(path)) {\n            this.loadSpriteFrameWithBundleKey.get(bundleName)!.get(path)!.addRef();\n            return this.loadSpriteFrameWithBundleKey.get(bundleName)!.get(path)!;\n        }\n        return null;\n    }\n    public destorySpriteFrameByPath(path: string): void {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadSpriteFrameWithBundleKey.has(bundleName) && this.loadSpriteFrameWithBundleKey.get(bundleName)!.has(path)) {\n            //不能释放到 refCount ==0 因为 spriteFrame类资源的释放。 需要在离开游戏的时候被释放掉。也就是他的释放是通过bundle来释放的\n            if (this.loadSpriteFrameWithBundleKey.get(bundleName)!.get(path)!.refCount > 1) {\n                this.loadSpriteFrameWithBundleKey.get(bundleName)!.get(path)!.decRef();\n            }\n        }\n    }\n\n    /**\n     * @description: 预加载bundle对应的 prefabs\n     * @param {string} formName\n     */\n    public async preloadBundlePrefab(formName: string) {\n        let data = splitFormName(formName);\n        let bundleName = data.bundle;\n        let prefabName = data.prefabName;\n        if (this.loadPrefabWithBundleKey.has(bundleName) && this.loadPrefabWithBundleKey.get(bundleName)?.has(formName)) {\n            this.loadProgress[formName] = 1;\n            this.calProgress(2);\n            return;\n        }\n        let bundle = this.subGameBundle.get(bundleName);\n        if (bundle == undefined) {\n            console.error(`${bundleName}不存在`);\n            return;\n        }\n        if (!this.loadPrefabWithBundleKey.has(bundleName)) {\n            this.loadPrefabWithBundleKey.set(bundleName, new Map<string, Prefab>());\n        }\n        bundle!.load<Prefab>(prefabName, (loadCnt: number, allCnt: number, item: AssetManager.RequestItem) => {\n            this.loadProgress[formName] = loadCnt / allCnt;\n            this.calProgress(0);\n        }, (err, prefab: Prefab) => {\n            if (err != null) {\n                console.log(err);\n                console.warn(`${formName}加载失败`);\n            } else {\n                this.loadProgress[formName] = 1;\n                if (!this.loadPrefabWithBundleKey.has(bundleName)) {\n                    this.loadPrefabWithBundleKey.set(bundleName, new Map<string, Prefab>());\n                }\n                this.loadPrefabWithBundleKey.get(bundleName)!.set(formName, prefab);\n                this.loadPrefabWithBundleKey.get(bundleName)!.get(formName)!.addRef();\n                this.calProgress(1);\n            }\n        });\n    }\n    //获得一个prefab\n    public getPrefabByPath(path: string): Prefab | null {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadPrefabWithBundleKey.has((bundleName)) && this.loadPrefabWithBundleKey.get(bundleName)!.has(path)) {\n            this.loadPrefabWithBundleKey.get(bundleName)!.get(path)!.addRef();\n            return this.loadPrefabWithBundleKey.get(bundleName)!.get(path)!;\n        }\n        return null;\n    }\n    //销毁一个prefab\n    public destoryPrefabByPath(path: string) {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadPrefabWithBundleKey.has(bundleName) && this.loadPrefabWithBundleKey.get(bundleName)!.has(path)) {\n            if (this.loadPrefabWithBundleKey.get(bundleName)!.get(path)!.refCount > 1) {\n                this.loadPrefabWithBundleKey.get(bundleName)!.get(path)!.decRef();\n            }\n        }\n    }\n\n    //加载图集\n    public async preloadBundleSpriteAtlas(filePath: string) {\n        let data = splitFormName(filePath);\n        let bundleName = data.bundle;\n        let spriteAtlasName = data.prefabName;\n\n        if (this.loadSpriteAtlasWithBundleKey.has(bundleName) && this.loadSpriteAtlasWithBundleKey.get(bundleName)?.has(filePath)) {\n            this.loadProgress[filePath] = 1;\n            this.calProgress(2);\n            return;\n        }\n\n\n        let bundle = this.subGameBundle.get(bundleName);\n        if (bundle == undefined) {\n            console.error(`${bundleName}不存在`);\n            return;\n        }\n        if (!this.loadSpriteAtlasWithBundleKey.has(bundleName)) {\n            this.loadSpriteAtlasWithBundleKey.set(bundleName, new Map<string, SpriteAtlas>());\n        }\n        bundle.load<SpriteAtlas>(spriteAtlasName, SpriteAtlas, (loadCnt: number, allCnt: number, item: AssetManager.RequestItem) => {\n            this.loadProgress[filePath] = loadCnt / allCnt;\n            this.calProgress(0);\n        }, (err, spriteAtlas: SpriteAtlas) => {\n            if (err != null) {\n                console.log(err);\n                console.error(`${filePath}加载失败`);\n            } else {\n                this.loadProgress[filePath] = 1;\n                if (!this.loadSpriteAtlasWithBundleKey.has(bundleName)) {\n                    this.loadSpriteAtlasWithBundleKey.set(bundleName, new Map<string, SpriteAtlas>());\n                }\n                this.loadSpriteAtlasWithBundleKey.get(bundleName)!.set(filePath, spriteAtlas);\n                this.loadSpriteAtlasWithBundleKey.get(bundleName)!.get(filePath)!.addRef();\n                this.calProgress(1);\n            }\n        });\n        //});\n    }\n    //获取图集\n    public getSpriteAtlasByPath(path: string): SpriteAtlas | null {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadSpriteAtlasWithBundleKey.has(bundleName) && this.loadSpriteAtlasWithBundleKey.get(bundleName)!.has(path)) {\n            this.loadSpriteAtlasWithBundleKey.get(bundleName)!.get(path)!.addRef();\n            return this.loadSpriteAtlasWithBundleKey.get(bundleName)!.get(path)!;\n        }\n        return null;\n    }\n    //销毁图集\n    public destorySpriteAtlasByPath(path: string): void {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadSpriteAtlasWithBundleKey.has(bundleName) && this.loadSpriteAtlasWithBundleKey.get(bundleName)!.has(path)) {\n            //不能释放到refCount <=0 \n            if (this.loadSpriteAtlasWithBundleKey.get(bundleName)!.get(path)!.refCount > 1) {\n                this.loadSpriteAtlasWithBundleKey.get(bundleName)!.get(path)!.decRef();\n            }\n        }\n    }\n\n    /**\n     * @description: 预加载bundle对应的 spine\n     * @param {string} formName\n     */\n    public async preloadBundleSpine(formName: string) {\n        let data = splitFormName(formName);\n        let bundleName = data.bundle;\n        let prefabName = data.prefabName;\n        if (this.loadSpineWithBundleKey.has(bundleName) && this.loadSpineWithBundleKey.get(bundleName)?.has(formName)) {\n            this.loadProgress[formName] = 1;\n            this.calProgress(2);\n            return;\n        }\n        let bundle = this.subGameBundle.get(bundleName);\n        if (bundle == undefined) {\n            console.error(`${bundleName}不存在`);\n            return;\n        }\n        if (!this.loadSpineWithBundleKey.has(bundleName)) {\n            this.loadSpineWithBundleKey.set(bundleName, new Map<string, sp.SkeletonData>());\n        }\n        bundle!.load<sp.SkeletonData>(prefabName, (loadCnt: number, allCnt: number, item: AssetManager.RequestItem) => {\n            this.loadProgress[formName] = loadCnt / allCnt;\n            this.calProgress(0);\n        }, (err, skeletionData: sp.SkeletonData) => {\n            if (err != null) {\n                console.log(err);\n                console.warn(`${formName}加载失败`);\n            } else {\n                this.loadProgress[formName] = 1;\n                if (!this.loadSpineWithBundleKey.has(bundleName)) {\n                    this.loadSpineWithBundleKey.set(bundleName, new Map<string, sp.SkeletonData>());\n                }\n                this.loadSpineWithBundleKey.get(bundleName)!.set(formName, skeletionData);\n                this.loadSpineWithBundleKey.get(bundleName)!.get(formName)!.addRef();\n                this.calProgress(1);\n            }\n        });\n    }\n    //获得一个spine\n    public lazyLoadySpine(path: string): Promise<sp.SkeletonData | null> {\n        return new Promise<sp.SkeletonData | null>((resolve, reject) => {\n            let data = splitFormName(path);\n            let bundleName = data.bundle;\n            let fileName = data.prefabName;\n            if (this.loadSpineWithBundleKey.has(bundleName) && this.loadSpineWithBundleKey.get(bundleName)!.has(path)) {\n                //如果缓存中有直接拿出来用\n                this.loadSpineWithBundleKey.get(bundleName)!.get(path)!.addRef();\n                resolve(this.loadSpineWithBundleKey.get(bundleName)!.get(path)!);\n                return;\n            }\n            let bundle = assetManager.getBundle(bundleName);\n            if (bundle == null) {\n                resolve(null);\n            } else {\n                bundle.load<sp.SkeletonData>(fileName, sp.SkeletonData, (err, spine: sp.SkeletonData) => {\n                    if (err != null) {\n                        console.error(err);\n                        resolve(null);\n                    } else {\n                        if (!this.loadSpineWithBundleKey.has(bundleName)) {\n                            this.loadSpineWithBundleKey.set(bundleName, new Map<string, sp.SkeletonData>());\n                        }\n                        this.loadSpineWithBundleKey.get(bundleName)!.set(path, spine);\n                        this.loadSpineWithBundleKey.get(bundleName)!.get(path)!.addRef();\n                        resolve(spine);\n                    }\n                })\n            }\n        })\n    }\n\n    //销毁一个Spine\n    public destorySpineByPath(path: string) {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadSpineWithBundleKey.has(bundleName) && this.loadSpineWithBundleKey.get(bundleName)!.has(path)) {\n            if (this.loadSpineWithBundleKey.get(bundleName)!.get(path)!.refCount > 1) {\n                this.loadSpineWithBundleKey.get(bundleName)!.get(path)!.decRef();\n            }\n        }\n    }\n\n    //加载音频\n    public async preloadBundleAudioClip(filePath: string) {\n        let data = splitFormName(filePath);\n        let bundleName = data.bundle;\n        let audioClipName = data.prefabName;\n        if (this.loadAudioClipWithBundleKey.has(bundleName) && this.loadAudioClipWithBundleKey.get(bundleName)?.has(filePath)) {\n            this.loadProgress[filePath] = 1;\n            this.calProgress(2);\n            return;\n        }\n        let bundle = this.subGameBundle.get(bundleName);\n        if (bundle == undefined) {\n            console.error(`${bundleName}不存在`);\n            return;\n        }\n        if (!this.loadAudioClipWithBundleKey.has(bundleName)) {\n            this.loadAudioClipWithBundleKey.set(bundleName, new Map<string, AudioClip>());\n        }\n        bundle.load<AudioClip>(audioClipName, (loadCnt: number, allCnt: number, item: AssetManager.RequestItem) => {\n            this.loadProgress[filePath] = loadCnt / allCnt;\n            this.calProgress(0);\n        }, (err, clip: AudioClip) => {\n            if (err != null) {\n                console.error(`${filePath}加载失败`);\n            } else {\n                this.loadProgress[filePath] = 1;\n                if (!this.loadAudioClipWithBundleKey.has(bundleName)) {\n                    this.loadAudioClipWithBundleKey.set(bundleName, new Map<string, AudioClip>());\n                }\n                this.loadAudioClipWithBundleKey.get(bundleName)!.set(filePath, clip);\n                this.loadAudioClipWithBundleKey.get(bundleName)!.get(filePath)!.addRef();\n                this.calProgress(1);\n            }\n        });\n        //});\n    }\n\n    //根据路径获取Audio Clip\n    public getAudioClipByPath(path: string): AudioClip | null {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadAudioClipWithBundleKey.has(bundleName) && this.loadAudioClipWithBundleKey.get(bundleName)!.has(path)) {\n            this.loadAudioClipWithBundleKey.get(bundleName)!.get(path)!.addRef();\n            return this.loadAudioClipWithBundleKey.get(bundleName)!.get(path)!;\n        }\n        return null;\n    }\n\n    //销毁音频\n    public destoryAudioClipByPath(path: string): void {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadAudioClipWithBundleKey.has(bundleName) && this.loadAudioClipWithBundleKey.get(bundleName)!.has(path)) {\n            if (this.loadAudioClipWithBundleKey.get(bundleName)!.get(path)!.refCount > 1) {\n                this.loadAudioClipWithBundleKey.get(bundleName)!.get(path)!.decRef();\n            }\n        }\n    }\n\n    /**\n     * 释放当前bundle中的所有动态加载的资源\n     * @param list \n     */\n    public releaseAllResByList(list: Map<string, number>) {\n\n        let bName = \"\";\n        for (let key of list.keys()) {\n            let resData = splitFormName(key);\n            let bundleName = resData.bundle;\n            bName = bundleName;\n            if (list.get(key) == ResType.ResType_SpriteFrame) {\n                if (!this.loadSpriteFrameWithBundleKey.has(bundleName)) {\n                    continue;\n                }\n\n                if (!this.loadSpriteFrameWithBundleKey.get(bName)!.has(key)) {\n                    continue;\n                }\n                while (this.loadSpriteFrameWithBundleKey.get(bName)!.get(key)!.refCount > 0) {\n                    this.loadSpriteFrameWithBundleKey.get(bName)!.get(key)!.decRef();\n                }\n                this.loadSpriteFrameWithBundleKey.get(bName)!.delete(key);\n            } else if (list.get(key) == ResType.ResType_SpriteAtlas) {\n                //释放图集资源\n                if (!this.loadSpriteAtlasWithBundleKey.has(bundleName)) {\n                    continue;\n                }\n                if (!this.loadSpriteAtlasWithBundleKey.get(bName)!.has(key)) {\n                    continue;\n                }\n                while (this.loadSpriteAtlasWithBundleKey.get(bName)!.get(key)!.refCount > 0) {\n                    this.loadSpriteAtlasWithBundleKey.get(bName)!.get(key)!.decRef();\n                }\n                this.loadSpriteAtlasWithBundleKey.get(bName)!.delete(key);\n            } else if (list.get(key) == ResType.ResType_Prefab) {\n                //预制体资源\n                if (!this.loadPrefabWithBundleKey.has(bundleName)) {\n                    continue;\n                }\n                if (!this.loadPrefabWithBundleKey.get(bName)!.has(key)) {\n                    continue;\n                }\n                while (this.loadPrefabWithBundleKey.get(bName)!.get(key)!.refCount > 0) {\n                    this.loadPrefabWithBundleKey.get(bName)!.get(key)!.decRef();\n                }\n                this.loadPrefabWithBundleKey.get(bName)!.delete(key);\n            } else if (list.get(key) == ResType.ResType_AudioClip) {\n                //音频资源\n                if (!this.loadAudioClipWithBundleKey.has(bundleName)) {\n                    continue;\n                }\n                bName = bundleName;\n                if (!this.loadAudioClipWithBundleKey.get(bName)!.has(key)) {\n                    continue;\n                }\n                while (this.loadAudioClipWithBundleKey.get(bName)!.get(key)!.refCount > 0) {\n                    this.loadAudioClipWithBundleKey.get(bName)!.get(key)!.decRef();\n                }\n                this.loadAudioClipWithBundleKey.get(bName)!.delete(key);\n            }\n\n        }\n        if (bName != \"\") {\n            this.loadPrefabWithBundleKey.delete(bName);\n            this.loadAudioClipWithBundleKey.delete(bName);\n            this.loadSpriteFrameWithBundleKey.delete(bName);\n            this.loadSpriteAtlasWithBundleKey.delete(bName);\n\n            if (this.subGameBundle.has(bName)) {\n                this.subGameBundle.delete(bName);\n            }\n            //调用了 releaseAll 应该不需要再 desRef() 方法了。源码中tryRelease就是将\n            //这里releaaseAll还不能调用，如果调用，第二次加载sprite的时候还是有问题的。 暂时不调用，但是回头要处理一下\n            //需要调用releaseAll否则有的资源释放不掉\n            if (assetManager.getBundle(bName) != null) {\n                assetManager.getBundle(bName)!.releaseAll();\n                assetManager.removeBundle(assetManager.getBundle(bName)!);\n            }\n            console.log(\"releaseAll执行了-----\", bName);\n        }\n    }\n\n    /**\n     * @description: 计算加载进度 更新进度条\n     * @param {number} state\n     */\n    public calProgress(state: number) {\n        let progress = 0;\n        let allCnt = 0;\n        for (let key in this.loadProgress) {\n            allCnt = allCnt + 1;\n            progress = progress + this.loadProgress[key];\n        }\n        if (this.preloadProgressCallBack != null) {\n            this.preloadProgressCallBack(progress / allCnt);\n        }\n        if (progress / allCnt == 1 && state == 1) {\n            this.preloadProgressCallBack = null;\n            if (this.preloadCompleteCallBack != null) {\n                this.preloadCompleteCallBack();\n                this.preloadCompleteCallBack = null;\n            }\n        }\n    }\n\n    /**\n     * 1:优先判定常驻窗体中有没有节点\n     * 需要先判定对应的bundle是否加载了\n     * 切割formName为 bundleName prefabName\n     * todo dev 这里以后配置成远程包的时候还需要处理为 远程资源的加载\n     * @param formName \n     */\n    public async loadForm(formName: string): Promise<Prefab | null> {\n        return new Promise((resolve, reject) => {\n\n            if (!formName || formName.length <= 0) {\n                resolve(null);\n            }\n            let data = splitFormName(formName);\n            let bundleName = data.bundle;\n            let prefabName = data.prefabName;\n\n            //如果缓存中有 则直接从缓存中获取，一般情况就是到这里就返回了。因为进入 字游戏或者大厅的时候就会预加载的\n            if (this.loadPrefabWithBundleKey.has(bundleName) && this.loadPrefabWithBundleKey.get(bundleName)!.has(formName)) {\n                resolve(this.loadPrefabWithBundleKey.get(bundleName)!.get(formName)!)\n                return;\n            }\n\n            assetManager.loadBundle(bundleName, (err, bundle: AssetManager.Bundle) => {\n                if (err != null) {\n                    error(`${bundleName}加载失败`);\n                    resolve(null);\n                    return;\n                }\n                this.subGameBundle.set(bundleName, bundle);\n                if (!this.loadPrefabWithBundleKey.has(bundleName)) {\n                    this.loadPrefabWithBundleKey.set(bundleName, new Map<string, Prefab>());\n                }\n                bundle.load<Prefab>(prefabName, (err, prefab: Prefab) => {\n                    if (err != null) {\n                        error(`${prefabName}加载失败`);\n                        resolve(null);\n                        return;\n                    }\n                    //每加载一次prefab就保存一下。\n                    //this.prefabs[formName] = prefab;\n                    if (!this.loadPrefabWithBundleKey.has(bundleName)) {\n                        this.loadPrefabWithBundleKey.set(bundleName, new Map<string, Prefab>());\n                    }\n                    this.loadPrefabWithBundleKey.get(bundleName)?.set(formName, prefab);\n                    prefab.addRef();\n                    resolve(prefab);\n                });\n            });\n        });\n    }\n\n    //销毁一个form对应的一个资源\n    public destoryForm(formName: string) {\n        if (formName == null || formName == undefined || formName.length <= 0) {\n            return;\n        }\n        console.log(`destoryForm${formName}`);\n        let data = splitFormName(formName);\n        if (this.loadPrefabWithBundleKey.has(data.bundle) && this.loadPrefabWithBundleKey.get(data.bundle)!.has(formName)) {\n            //窗体被销毁减少引用计数\n            if (this.loadPrefabWithBundleKey.get(data.bundle)!.get(formName)!.refCount > 1) {\n                this.loadPrefabWithBundleKey.get(data.bundle)!.get(formName)!.decRef();\n            }\n        }\n    }\n}\n\n"]}