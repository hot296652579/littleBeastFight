{"version":3,"sources":["file:///Users/super_javan/cocoscreator/littleBeastFight3.6/assets/Script/UIFrame/UIMgr.ts"],"names":["UIManager","ResMgr","PriorityStake","FormType","ModalOpacity","ModalMgr","UIScreen","UIWindow","ndScreen","ndFixed","ndPopUp","ndFloat","ndWin","ndLoading","ndNode3d","ndUI2dOn3d","ndBubble","ndBlock","allForms","cc","js","createMap","screensStack","loadingForms","winArr","popupsArr","winMasks","screenMasks","waitNodePool","NodePool","maskNodePool","getInstance","instance","director","on","onWinSizeChged","uiscreens","getElements","k","length","console","log","node","getComponent","Widget","updateAlignment","init","nd2dOn3d","checkFormShowing","prefabPath","com","active","checkFormLoading","getMaskNode","size","maskNode","get","openScreen","params","undefined","warn","pb","getPrefabByPath","error","loadForm","instantiate","isOnleyEngross","getSize","getTopElement","closeSelf","isEngross","is3d","mask","addChild","setContentSize","Size","screen","width","height","key","fid","onShow","showEffect","all","push","openWin","modalType","opacity","OpacityZero","view","getFrameSize","arr","getModelTypeComs","checkModalWinAndPopUp","reSortPopup","popup","tIdx","getSiblingIndex","maxIdx","bigger","setSiblingIndex","openWait","getWaitNode","closeWaiting","splice","onHide","maskPath","t","getHideEffectTime","Tween","stopAllByTarget","tween","to","easing","call","reBackMaskNode","destroy","destoryForm","start","hideEffect","reBackWaitNode","put","closeForm","path","split","formType","FormType_Screen","exitToScreen","FormType_Fixed","FormType_Popup","FormType_Float","FormType_Win","exitToWin","FormType_Loading","FormType_Bubble","tcom","pop","nextCom","reShow","destory","off"],"mappings":"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","sourcesContent":["/*\n * @Description: UI管理器\n * @Author: Super_Javan\n * @Date: 2022-11-29 17:13:36\n * @LastEditTime: 2022-12-03 22:53:13\n * @LastEditors: Super_Javan\n */\n\nimport { ResMgr } from \"../BaseManager/ResMgr\";\nimport { PriorityStake } from \"../utils/PriorityStack\";\nimport { FormType, ModalOpacity } from \"./config/SysDefine\";\nimport { ModalMgr } from \"./ModalMgr\";\nimport { UIBase } from \"./UIBase\";\nimport { UIPopup, UIScreen, UIWindow } from \"./UIForm\";\n\nexport class UIManager {\n    //全屏显示的ui挂载节点\n    private ndScreen: cc.Node = null;\n    //固定ui的挂载节点\n    private ndFixed: cc.Node = null;\n    //弹出窗体的挂载节点\n    private ndPopUp: cc.Node = null;\n    //浮动窗体\n    private ndFloat: cc.Node = null;\n    //能够拦截float的win\n    private ndWin: cc.Node = null;\n    //loading窗体\n    private ndLoading: cc.Node = null;\n\n    private ndNode3d: cc.Node = null;\n    public ndUI2dOn3d: cc.Node = null;\n    //气泡\n    private ndBubble: cc.Node = null;\n    //全局屏蔽层\n    private ndBlock: cc.Node = null;\n\n    //所有显示的窗体\n    private allForms: { [key: string]: UIBase } = cc.js.createMap();\n    //存储screen\n    private screensStack: PriorityStake<UIScreen> = new PriorityStake<UIScreen>();\n    private loadingForms: { [key: string]: boolean } = cc.js.createMap();\n    private winArr: UIWindow[] = [];\n    //能够排序的一个popup array\n    private popupsArr: UIPopup[] = [];\n    //win类型的masks\n    private winMasks: { [key: string]: cc.Node } = cc.js.createMap();\n    //气泡的数据 delete bubbleMap[fid];\n    //气泡需要是按照 数组形式来的 string:prefabName UIBubble[] 是组件本身\n    // private bubbleMap:Map<string,UIBubble[]> = new Map<string,UIBubble[]>;\n\n    //screen类型的masks\n    private screenMasks: { [key: string]: cc.Node } = cc.js.createMap();\n\n\n    private static instance: UIManager;\n    public static getInstance(): UIManager {\n        if (this.instance == null) {\n            this.instance = new UIManager();\n            cc.director.on(\"winsizechanged\", this.instance.onWinSizeChged, this.instance);\n        }\n        return this.instance;\n    }\n\n    onWinSizeChged() {\n\n        let uiscreens = this.screensStack.getElements();\n        for (let k = 0; k < uiscreens.length; k++) {\n            console.log(\"窗口变化，要重新刷新一下======\");\n            uiscreens[k].node.getComponent(cc.Widget)!.updateAlignment();\n        }\n    }\n\n    //初始化\n    public init(ndScreen: cc.Node,\n        ndFixed: cc.Node,\n        ndPopUp: cc.Node,\n        ndFloat: cc.Node,\n        ndWin: cc.Node,\n        ndLoading: cc.Node,\n        ndNode3d: cc.Node,\n        nd2dOn3d: cc.Node,\n        ndBubble: cc.Node,\n        ndBlock: cc.Node): void {\n        this.ndScreen = ndScreen;\n        this.ndFixed = ndFixed;\n        this.ndPopUp = ndPopUp;\n        this.ndFloat = ndFloat;\n        this.ndWin = ndWin;\n        this.ndLoading = ndLoading;\n        this.ndNode3d = ndNode3d;\n        this.ndUI2dOn3d = nd2dOn3d;\n        this.ndBubble = ndBubble;\n        this.ndBlock = ndBlock;\n    }\n\n    //判断一个界面是否正在显示\n    public checkFormShowing(prefabPath: string): boolean {\n        let com = this.allForms[prefabPath];\n        if (!com) {\n            return false;\n        }\n        return com.node.active;\n    }\n    public checkFormLoading(prefabPath: string) {\n        let com = this.loadingForms[prefabPath];\n        return !!com;\n    }\n\n    private waitNodePool: cc.NodePool = new cc.NodePool();\n    private maskNodePool: cc.NodePool = new cc.NodePool();\n    private getMaskNode(): cc.Node | null {\n        if (this.maskNodePool.size() > 0) {\n            let maskNode = this.maskNodePool.get();\n            return maskNode;\n        }\n        return null;\n    }\n\n    //打开一个screen\n    public async openScreen(prefabPath: string, ...params: any): Promise<UIScreen | null> {\n        console.log(`打开openScene--${prefabPath}`);\n        if (prefabPath == null || prefabPath == undefined || prefabPath.length <= 0) {\n            cc.warn(`${prefabPath}，参数错误`);\n            return null;\n        }\n        //当前窗体正在显示\n        if (this.checkFormShowing(prefabPath)) {\n            cc.warn(`${prefabPath}窗体正在显示中`);\n            return null;\n        }\n        if (this.checkFormLoading(prefabPath)) {\n            cc.warn(`${prefabPath}正在加载中`);\n            return null;\n        }\n        this.loadingForms[prefabPath] = true;\n        let pb = ResMgr.getInstance().getPrefabByPath(prefabPath);\n\n        if (pb == null) {\n            console.error(\"兼容模式 需要 去健在窗体\")\n            pb = await ResMgr.getInstance().loadForm(prefabPath)!;\n        }\n\n        if (pb == null) {\n            cc.warn(`${prefabPath}窗体加载错误!`);\n            delete this.loadingForms[prefabPath];\n            return null;\n        }\n        let node = cc.instantiate(pb!);\n        let com = node.getComponent(UIScreen);\n        if (com == null) {\n            cc.warn(`${prefabPath}没有绑定UIScreen组件`);\n            delete this.loadingForms[prefabPath];\n            return null;\n        }\n\n        if (com.isOnleyEngross) {\n            //关闭掉所有的screen\n            console.log(\"关闭所有的screeen\", this.screensStack.getSize(), \"==========\");\n            while (this.screensStack.getSize() > 0) {\n                await this.screensStack.getTopElement()!.closeSelf();\n            }\n        } else if (com.isEngross) {\n            while (this.screensStack.getSize() > 0) {\n                await this.screensStack.getTopElement()!.closeSelf();\n            }\n        }\n\n        //给screen增加屏蔽层\n        if (!com.is3d) {\n            console.log(\"需要加屏蔽层========\");\n            let maskNode = this.getMaskNode();\n            if (maskNode == null) {\n                let mask = ResMgr.getInstance().getPrefabByPath(\"Lobby/Prefabs/UIMask\");\n                if (mask != null) {\n                    maskNode = cc.instantiate(mask!);\n                }\n            }\n            if (maskNode != null) {\n                //在首次加载的时候会有问题。这个地方需要优化一下\n                this.ndScreen!.addChild(maskNode!);\n                maskNode!.setContentSize(new cc.Size(screen.width, screen.height));\n                this.screenMasks[prefabPath] = maskNode!;\n            }\n        } else {\n            console.log(\"当前为3D场景不需要加屏蔽层\");\n            for (let key in this.screenMasks) {\n                this.screenMasks[key].active = false;\n            }\n        }\n\n        this.allForms[prefabPath] = com;\n        com.fid = prefabPath;\n        if (com.is3d) {\n            this.ndNode3d!.addChild(node);\n        } else {\n            this.ndScreen!.addChild(node);\n        }\n\n        com.onShow(...params);\n        await com.showEffect();\n        if (!com.isEngross) {\n            //不独占 将其他screen active 设置为false\n            let all = this.screensStack.getElements();\n            for (let k = 0; k < all.length; k++) {\n                all[k].node.active = false;\n            }\n        }\n        //将对象保存到stack中\n        this.screensStack.push(com);\n        console.log('保存场景的堆栈数量 : !!!!!!' + this.screensStack.getSize());\n        delete this.loadingForms[prefabPath]\n        return com\n    }\n    //打开一个窗口\n    public async openWin(prefabPath: string, ...params: any): Promise<UIWindow | null> {\n        console.log(`打开openWin--${prefabPath}`);\n        if (prefabPath == null || prefabPath == undefined || prefabPath.length <= 0) {\n            cc.warn(`${prefabPath}Win节点不存在`);\n            return null;\n        }\n        if (this.checkFormShowing(prefabPath)) {\n            cc.warn(`${prefabPath}win节点正在显示中`);\n            return null;\n        }\n        if (this.checkFormLoading(prefabPath)) {\n            cc.warn(`${prefabPath}win节点正在打开...`)\n            return null;\n        }\n        this.loadingForms[prefabPath] = true;\n        let pb = ResMgr.getInstance().getPrefabByPath(prefabPath);\n        //await this.waitFormsecond();\n        //兼容一下，暂时这么写。捕鱼的结构需要调整一下  这里要干掉否则 隐藏bug\n        if (pb == null) {\n            console.error(`${prefabPath}不存在使用了兼容模式`);\n            pb = await ResMgr.getInstance().loadForm(prefabPath);\n        }\n        if (pb == null) {\n            console.error(`${prefabPath}win节点加载失败`);\n            //如果加载失败了，则需要将节点从\n            delete this.loadingForms[prefabPath];\n            return null;\n        }\n        let node = cc.instantiate(pb);\n        let com = node.getComponent(UIWindow);\n        if (com == null) {\n            cc.warn(`${prefabPath}win加载没有绑定到UIWindow组件上`);\n            delete this.loadingForms[prefabPath];\n            return null;\n        }\n        if (com.modalType.opacity >= ModalOpacity.OpacityZero) {\n            console.log(\"开始获取屏蔽层的东西\");\n            let maskNode = this.getMaskNode();\n            if (maskNode == null) {\n                //有屏蔽层\n                let mask = ResMgr.getInstance().getPrefabByPath(\"Lobby/Prefabs/UIMask\");\n                maskNode = cc.instantiate(mask!);\n            }\n            this.ndWin!.addChild(maskNode);\n            maskNode.setContentSize(new cc.Size(cc.view.getFrameSize().width, cc.view.getFrameSize().height));\n            this.winMasks[prefabPath] = maskNode;\n        }\n        com.fid = prefabPath;\n        this.ndWin!.addChild(node);\n        this.winArr.push(com);\n        this.allForms[prefabPath] = com;\n        com.onShow(...params);\n        if (com.modalType.opacity >= ModalOpacity.OpacityZero) {\n            let arr: UIBase[] = this.getModelTypeComs();\n            ModalMgr.getInstance().checkModalWinAndPopUp(arr, this.winMasks, true);\n        }\n        delete this.loadingForms[prefabPath];\n        com.showEffect();\n\n        return com;\n    }\n\n    /**\n     * 对弹出来的popup进行重新排序\n     * @param popup \n     */\n    public reSortPopup(popup: UIPopup) {\n        if (this.popupsArr.length > 0) {\n            let tIdx = popup.node.getSiblingIndex();\n            let maxIdx = this.popupsArr[this.popupsArr.length - 1].node!.getSiblingIndex();\n            let bigger: boolean = false;\n            for (let k = 0; k < this.popupsArr.length; k++) {\n                if (this.popupsArr[k].fid == popup.fid) {\n                    bigger = true;\n                    continue;\n                }\n                if (bigger == false) {\n                    this.popupsArr[k].node.setSiblingIndex(k);\n                }\n                if (bigger) {\n                    this.popupsArr[k].node.setSiblingIndex(k - 1);\n                }\n            }\n            popup.node.setSiblingIndex(this.popupsArr.length - 1);\n        }\n    }\n\n    //动态计算需要遮罩的win和popups\n    //对于popup来说，层级越高，越在上\n    public getModelTypeComs(): UIBase[] {\n        let arr: UIBase[] = [];\n        for (let k = 0; k < this.popupsArr.length; k++) {\n            arr.push(this.popupsArr[k]);\n        }\n        for (let k = 0; k < this.winArr.length; k++) {\n            arr.push(this.winArr[k]);\n        }\n        return arr;\n    }\n    //打开wait界面\n    public async openWait(prefabPath: string): Promise<UIWindow | null> {\n        if (prefabPath == null || prefabPath == undefined || prefabPath.length <= 0) {\n            cc.warn(`${prefabPath}win节点不存在`);\n            return null;\n        }\n        if (this.checkFormShowing(prefabPath)) {\n            cc.warn(`${prefabPath}Win节点正在显示中`);\n            return null;\n        }\n        if (this.checkFormLoading(prefabPath)) {\n            cc.warn(`${prefabPath}win节点正在加载中...`);\n            return null;\n        }\n        this.loadingForms[prefabPath] = true;\n\n        let node = this.getWaitNode();\n        if (node == null) {\n            let pb = ResMgr.getInstance().getPrefabByPath(prefabPath);\n            //兼容一下，暂时这么写。捕鱼的结构需要调整一下  这里要干掉否则 隐藏bug\n            if (pb == null) {\n                console.error(`${prefabPath}不存在使用了兼容模式`);\n                pb = await ResMgr.getInstance().loadForm(prefabPath);\n            }\n            if (pb == null) {\n                console.error(`${prefabPath}win节点加载失败`);\n                delete this.loadingForms[prefabPath];\n                return null;\n            }\n            node = cc.instantiate(pb);\n        }\n\n        let com = node.getComponent(UIWindow);\n        if (com == null) {\n            cc.warn(`${prefabPath}win加载没有绑定到UIWindow组件上`);\n            delete this.loadingForms[prefabPath];\n            return null;\n        }\n        if (com.modalType.opacity >= ModalOpacity.OpacityZero) {\n            console.log(\"开始获取屏蔽层的东西\");\n            let maskNode = this.getMaskNode();\n            if (maskNode == null) {\n                //有屏蔽层\n                let mask = ResMgr.getInstance().getPrefabByPath(\"Lobby/Prefabs/UIMask\");\n                maskNode = cc.instantiate(mask!);\n            }\n            if (maskNode == null) {\n                console.error(`maskNode为空了=====xxxx`);\n\n            }\n            this.ndWin!.addChild(maskNode);\n            maskNode.setContentSize(new cc.Size(cc.view.getFrameSize().width, cc.view.getFrameSize().height))\n            // maskNode.getComponent(UITransform)!.contentSize = new Size(view.getFrameSize().width, view.getFrameSize().height);\n            this.winMasks[prefabPath] = maskNode;\n        }\n        com.fid = prefabPath;\n        this.ndWin!.addChild(node);\n        this.winArr.push(com);\n        this.allForms[prefabPath] = com;\n        com.onShow();\n        let arr: UIBase[] = this.getModelTypeComs();\n        ModalMgr.getInstance().checkModalWinAndPopUp(arr, this.winMasks, true);\n        delete this.loadingForms[prefabPath];\n        await com.showEffect();\n        return com;\n    }\n    private getWaitNode(): cc.Node | null {\n        if (this.waitNodePool.size() > 0) {\n            return this.waitNodePool.get();\n        }\n        return null;\n    }\n\n    //关闭waiting节点\n    public async closeWaiting(prefabPath: string) {\n        let com = this.allForms[prefabPath];\n        if (!com) {\n            console.log(\"closeForm中的com不存在\");\n            return false;\n        }\n        console.log(\"关闭waiting ==========\");\n        let tIdx: number = -1;\n        if (this.winArr.length > 0) {\n            for (let k = 0; k < this.winArr.length; k++) {\n                if (this.winArr[k].fid == prefabPath) {\n                    tIdx = k;\n                    com = this.winArr[k];\n                    break;\n                }\n            }\n        }\n        if (tIdx >= 0 && tIdx < this.winArr.length) {\n            this.winArr.splice(tIdx, 1);\n            com!.onHide();\n            let maskPath = com!.fid;\n            let maskNode = this.winMasks[maskPath];\n            if (maskNode) {\n                let t = com!.getHideEffectTime();\n                //消失要有消失动画\n                cc.Tween.stopAllByTarget(maskNode);\n                cc.tween(maskNode)\n                    .to(t, { opacity: 0 }, { easing: 'linear' })\n                    // 当前面的动作都执行完毕后才会调用这个回调函数\n                    .call(() => {\n                        if (!this.reBackMaskNode(maskNode)) {\n                            maskNode.destroy();\n                            ResMgr.getInstance().destoryForm(\"Lobby/Prefabs/UIMask\");\n                        }\n                    })\n                    .start()\n            }\n            delete this.winMasks[maskPath];\n            let arr: UIBase[] = this.getModelTypeComs();\n            ModalMgr.getInstance().checkModalWinAndPopUp(arr, this.winMasks, false);\n            await com!.hideEffect();\n            this.reBackWaitNode(com.node);\n            ResMgr.getInstance().destoryForm(prefabPath);\n        }\n        delete this.allForms[prefabPath];\n    }\n    private reBackWaitNode(node: cc.Node) {\n        this.waitNodePool.put(node);\n    }\n\n    /**\n     * 关闭一个UIForm\n     * @prefabPath\n     */\n    public async closeForm(prefabPath: string): Promise<boolean> {\n        console.log(\"closeForm关闭\", prefabPath);\n        if (!prefabPath || prefabPath.length <= 0) {\n            cc.warn(`${prefabPath}`, \"参数错误\");\n            return false;\n        }\n        let path = prefabPath.split(\"_\")[0];\n        let com = this.allForms[prefabPath];\n        if (!com && path.length == prefabPath.length) {\n            console.log(\"closeForm中的com不存在\");\n            return false;\n        }\n        // if(com == null && path.length != prefabPath.length){\n        //     for(let i = 0;i<this.bubbleMap.get(path).length;i++){\n        //         if(this.bubbleMap.get(path)[i].fid == prefabPath){\n        //             com = this.bubbleMap.get(path)[i];\n        //             break;\n        //         }\n        //     }\n        // }\n        if (!com) {\n            console.log(\"closeForm中的com不存在\");\n            return false;\n        }\n        switch (com.formType) {\n            case FormType.FormType_Screen:\n                await this.exitToScreen(prefabPath);\n                break;\n            case FormType.FormType_Fixed:\n                // await this.exitToFixed(prefabPath);\n                break;\n            case FormType.FormType_Popup:\n                // await this.exitToPopup(prefabPath);\n                break;\n            case FormType.FormType_Float:\n                // await this.exitToFloat(prefabPath);\n                break;\n            case FormType.FormType_Win:\n                await this.exitToWin(prefabPath);\n                break;\n            case FormType.FormType_Loading:\n                // await this.exitToLoading(prefabPath);\n                break;\n            case FormType.FormType_Bubble:\n                // await this.exitToBubble(prefabPath);\n                break;\n        }\n        return true;\n    }\n\n    /**\n     * screen退出\n     * @param prefabPath \n     * @returns \n     */\n    private async exitToScreen(prefabPath: string) {\n        console.log(`${prefabPath}exitToScreen`);\n        let com = this.allForms[prefabPath];\n        if (!com) {\n            return false;\n        }\n        //screen的退出必须是按照栈退出\n        let tcom = this.screensStack.pop();\n        if (tcom != com) {\n            cc.warn(`${prefabPath}screen没有按顺序退出`);\n            return;\n        }\n        let nextCom = this.screensStack.getTopElement();\n        if (nextCom != null) {\n            nextCom.node.active = true;\n            //界面重新被激活\n            nextCom.reShow();\n        }\n        com.onHide();\n        //如果不是独占 （这里其实不用判断是否是独占，只要判定还有screen就显示出来就可以了）\n        await com.hideEffect();\n        //节点需要从父节点移除\n        com.node.destroy();\n        //com.node.removeFromParent();\n        ResMgr.getInstance().destoryForm(prefabPath);\n        delete this.allForms[prefabPath];\n        console.log(prefabPath, \"exittoscreen 成功\");\n        let maskNode = this.screenMasks[prefabPath];\n        if (maskNode != null && maskNode != undefined) {\n            if (!this.reBackMaskNode(maskNode)) {\n                maskNode.destroy();\n                ResMgr.getInstance().destoryForm(\"Lobby/Prefabs/UIMask\");\n            }\n            delete this.screenMasks[prefabPath];\n        }\n    }\n\n    /**\n     * @description:退出窗口 \n     * @param {string} prefabPath\n     */\n    private async exitToWin(prefabPath: string) {\n        let com: UIWindow | null = null;\n        let tIdx: number = -1;\n        if (this.winArr.length > 0) {\n            for (let k = 0; k < this.winArr.length; k++) {\n                if (this.winArr[k].fid == prefabPath) {\n                    tIdx = k;\n                    com = this.winArr[k];\n                    break;\n                }\n            }\n        }\n        if (tIdx >= 0 && tIdx < this.winArr.length) {\n            this.winArr.splice(tIdx, 1);\n            com!.onHide();\n            let maskPath = com!.fid;\n            let maskNode = this.winMasks[maskPath];\n            if (maskNode) {\n                let t = com!.getHideEffectTime();\n                //消失要有消失动画\n                cc.Tween.stopAllByTarget(maskNode);\n                // cc.tween<UIOpacity>(maskNode.getComponent(UIOpacity)!).to(t, { opacity: 0 }, { easing: \"linear\" }).call(() => {\n                //     //maskNode.removeFromParent();\n                //     if (!this.reBackMaskNode(maskNode)) {\n                //         maskNode.destroy();\n                //         ResMgr.getInstance().destoryForm(\"Lobby/Prefabs/UIMask\");\n                //     }\n                // }).start();\n                cc.tween(maskNode)\n                    .to(t, { opacity: 0 }, { easing: 'linear' })\n                    // 当前面的动作都执行完毕后才会调用这个回调函数\n                    .call(() => {\n                        if (!this.reBackMaskNode(maskNode)) {\n                            maskNode.destroy();\n                            ResMgr.getInstance().destoryForm(\"Lobby/Prefabs/UIMask\");\n                        }\n                    })\n                    .start()\n            }\n            delete this.winMasks[maskPath];\n            let arr: UIBase[] = this.getModelTypeComs();\n            ModalMgr.getInstance().checkModalWinAndPopUp(arr, this.winMasks, false);\n            await com!.hideEffect();\n            com!.node.destroy();\n            ResMgr.getInstance().destoryForm(prefabPath);\n        }\n        delete this.allForms[prefabPath];\n    }\n    private reBackMaskNode(node: cc.Node): boolean {\n        if (this.maskNodePool.size() >= 10) {\n            return false;\n        }\n        this.maskNodePool.put(node);\n        return true;\n    }\n\n    public static destory() {\n        this.instance = null!;\n        cc.director.off(\"winsizechanged\")\n    }\n}"]}