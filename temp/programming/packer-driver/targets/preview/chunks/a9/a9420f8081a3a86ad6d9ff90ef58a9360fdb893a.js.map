{"version":3,"sources":["file:///Users/super_javan/cocoscreator/littleBeastFight3.6/assets/Script/Base/ResMgr.ts"],"names":["ResMgr","_decorator","js","SpriteAtlas","sp","assetManager","error","splitFormName","ccclass","property","ResType","preloadProgressCallBack","preloadCompleteCallBack","subGameBundle","Map","loadPrefabWithBundleKey","loadSpriteFrameWithBundleKey","loadSpriteAtlasWithBundleKey","loadAudioClipWithBundleKey","loadSpineWithBundleKey","loadProgress","createMap","getInstance","instance","preLoad","list","progressCb","completeCallBack","resType","undefined","size","set","ResType_Prefab","ResType_AudioClip","map","idx","key","get","has","setTimeout","preloadBundlePrefab","ResType_SpriteFrame","preloadBunleSpriteFrame","ResType_SpriteAtlas","preloadBundleSpriteAtlas","ResType_Spine","preloadBundleSpine","preloadBundleAudioClip","keys","calProgress","filePath","data","bundleName","bundle","spriteFrameName","prefabName","console","load","loadCnt","allCnt","item","err","spriteFrame","log","addRef","getSpriteFrameByPath","path","destorySpriteFrameByPath","refCount","decRef","formName","prefab","warn","getPrefabByPath","destoryPrefabByPath","spriteAtlasName","spriteAtlas","getSpriteAtlasByPath","destorySpriteAtlasByPath","skeletionData","lazyLoadySpine","Promise","resolve","reject","fileName","getBundle","SkeletonData","spine","destorySpineByPath","audioClipName","clip","getAudioClipByPath","destoryAudioClipByPath","releaseAllResByList","bName","resData","delete","releaseAll","removeBundle","state","progress","loadForm","length","loadBundle","destoryForm"],"mappings":"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","sourcesContent":["/**资源加载管理器 */\nimport { _decorator, Component, Node, js, Prefab, SpriteFrame, SpriteAtlas, AudioClip, sp, AssetManager, assetManager, error } from 'cc';\nimport { splitFormName } from '../Utils/Utils';\nconst { ccclass, property } = _decorator;\n\n/**\n * 资源类型\n */\nexport enum ResType {\n\n    ResType_UnKnow = 0,                    //位置类型 该种资源不处理\n    ResType_SpriteFrame = 1,                //图片资源 输出类型为 spriteFrame\n    ResType_SpriteAtlas = 2,                //图集资源 输出类型为 SpriteAtlas 通过->getSpriteFrame() 能够获取对应的SpriteFrame 要求图集 plist和png的名字除了后缀是一样的\n    ResType_AudioClip = 3,                  //音频资源 输出类型为 AudioClip   \n    ResType_Prefab = 4,                     //预制体   输出类型为 Prefab\n    ResType_Spine = 5,                      //骨骼动画资源 输出类型为 sp.SkeletionnData 要求三种资源类型必须一致\n    ResType_Fnt = 6,                        //字体资源类型 输出格式为 LabelAtlas 要求 字体 fnt文件和png文件的名字除了后缀必须一致\n    ResType_Animation = 7,                  //动画资源   输出格式为AnimationClip\n\n    //一下几种是需要扩展的，以后会用到的。但是本次不准备实现\n    ResType_Material = 8,                  //材质\n    ResType_Shader = 9,                     //shader 高级效果展示，资源缓存的时候暂时不处理\n\n    //粒子特效  粒子特效也可以动态加载进去。\n    ResType_Particle = 10,                  //粒子特效\n}\n\nexport class ResMgr {\n    private static instance: ResMgr;\n    public static getInstance() {\n        if (this.instance == null) {\n            this.instance = new ResMgr();\n        }\n\n        return this.instance\n    }\n\n    private preloadProgressCallBack: Function | null = null;\n    private preloadCompleteCallBack: Function | null = null;\n    private subGameBundle: Map<string, AssetManager.Bundle> = new Map<string, AssetManager.Bundle>();\n\n    /**\n     * @description: 需要加载到内存中的  以后先从内存中获取\n    */\n    //预设资源\n    private loadPrefabWithBundleKey: Map<string, Map<string, Prefab>> = new Map<string, Map<string, Prefab>>();\n    //SpriteFrame资源\n    private loadSpriteFrameWithBundleKey: Map<string, Map<string, SpriteFrame>> = new Map<string, Map<string, SpriteFrame>>();\n    //合图的图集资源\n    private loadSpriteAtlasWithBundleKey: Map<string, Map<string, SpriteAtlas>> = new Map<string, Map<string, SpriteAtlas>>();\n    //音频资源\n    private loadAudioClipWithBundleKey: Map<string, Map<string, AudioClip>> = new Map<string, Map<string, AudioClip>>();\n    //spine动画资源\n    private loadSpineWithBundleKey: Map<string, Map<string, sp.SkeletonData>> = new Map<string, Map<string, sp.SkeletonData>>();\n    private loadProgress: { [key: string]: number } = js.createMap();\n\n    /**\n     * @description: 加载list里面对应的每个文件(预设,spriteFrame,图集,音频等)\n     * @param {Map} list\n     * @param {*} number\n     * @param {Function} progressCb\n     * @param {Function} completeCallBack\n     * @param {*} resType\n     * @param {*} boolean\n     */\n    public async preLoad(list: Map<string, number>, progressCb: Function, completeCallBack: Function, resType?: & Map<ResType, boolean>) {\n        if (resType == null || resType == undefined) {\n            resType = new Map<ResType, boolean>();\n        }\n        if (resType.size == 0) {\n            resType!.set(ResType.ResType_Prefab, true);\n            resType!.set(ResType.ResType_AudioClip, true);\n        }\n        this.preloadProgressCallBack = progressCb;\n        this.preloadCompleteCallBack = completeCallBack;\n        this.loadProgress = js.createMap();\n        let map = list;\n        let idx = 0;\n        for (let key of map.keys()) {\n            idx++;\n            if (map.get(key) == ResType.ResType_Prefab &&\n                resType!.has(ResType.ResType_Prefab) &&\n                resType!.get(ResType.ResType_Prefab)) {\n                //加载 预制体 prefab\n                this.loadProgress[key] = 0;\n                setTimeout(() => {\n                    this.preloadBundlePrefab(key);\n                }, 0);\n            }\n            else if (map.get(key) == ResType.ResType_SpriteFrame &&\n                resType!.has(ResType.ResType_SpriteFrame) &&\n                resType!.get(ResType.ResType_SpriteFrame)) {\n                //图片 spriteFrame\n                this.loadProgress[key] = 0;\n                setTimeout(() => {\n                    this.preloadBunleSpriteFrame(key);\n                }, 0);\n\n            } else if (map.get(key) == ResType.ResType_SpriteAtlas &&\n                resType!.has(ResType.ResType_SpriteAtlas) &&\n                resType!.get(ResType.ResType_SpriteAtlas)\n            ) {\n                //图集 spriteAtlas\n                this.loadProgress[key] = 0;\n                setTimeout(() => {\n                    this.preloadBundleSpriteAtlas(key);\n                }, 0);\n\n            } else if (map.get(key) == ResType.ResType_Spine &&\n                resType!.has(ResType.ResType_Spine) &&\n                resType!.get(ResType.ResType_Spine)\n            ) {\n                //spine\n                this.loadProgress[key] = 0;\n                setTimeout(() => {\n                    this.preloadBundleSpine(key);\n                }, 0);\n            } else if (map.get(key) == ResType.ResType_AudioClip &&\n                resType!.has(ResType.ResType_AudioClip) &&\n                resType!.get(ResType.ResType_AudioClip)\n            ) {\n                //音频资源 AudioClip\n                this.loadProgress[key] = 0;\n                setTimeout(() => {\n                    this.preloadBundleAudioClip(key);\n                }, 0);\n            }\n        }\n        setTimeout(() => {\n            this.calProgress(1);\n        }, 200);\n    }\n\n    /**\n     * @description: 预加载bundle对应的 SpriteFrame\n     * @param {string} formName\n     */\n    public async preloadBunleSpriteFrame(filePath: string) {\n        let data = splitFormName(filePath);\n        let bundleName = data.bundle;\n        //单个资源如果要读取到spriteFrame，必须后边加上spriteFrame路径\n        let spriteFrameName = data.prefabName;\n\n\n        if (this.loadSpriteFrameWithBundleKey.has(bundleName) && this.loadSpriteFrameWithBundleKey.get(bundleName)?.has(filePath)) {\n            this.loadProgress[filePath] = 1;\n            this.calProgress(2);\n            return;\n        }\n        let bundle = this.subGameBundle.get(bundleName);\n        if (bundle == undefined) {\n            console.error(`${bundleName}不存在`);\n            return;\n        }\n        if (!this.loadSpriteFrameWithBundleKey.has(bundleName)) {\n            this.loadSpriteFrameWithBundleKey.set(bundleName, new Map<string, SpriteFrame>());\n        }\n        bundle.load<SpriteFrame>(spriteFrameName, (loadCnt: number, allCnt: number, item: AssetManager.RequestItem) => {\n            this.loadProgress[filePath] = loadCnt / allCnt;\n            this.calProgress(0);\n        }, (err, spriteFrame: SpriteFrame) => {\n            if (err != null) {\n                console.log(err);\n                console.error(`${filePath}加载失败`);\n            } else {\n                this.loadProgress[filePath] = 1;\n                if (!this.loadSpriteFrameWithBundleKey.has(bundleName)) {\n                    this.loadSpriteFrameWithBundleKey.set(bundleName, new Map<string, SpriteFrame>());\n                }\n                this.loadSpriteFrameWithBundleKey.get(bundleName)!.set(filePath, spriteFrame);\n                this.loadSpriteFrameWithBundleKey.get(bundleName)!.get(filePath)!.addRef();\n                this.calProgress(1);\n            }\n        })\n    }\n    public getSpriteFrameByPath(path: string): SpriteFrame | null {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadSpriteFrameWithBundleKey.has(bundleName) && this.loadSpriteFrameWithBundleKey.get(bundleName)!.has(path)) {\n            this.loadSpriteFrameWithBundleKey.get(bundleName)!.get(path)!.addRef();\n            return this.loadSpriteFrameWithBundleKey.get(bundleName)!.get(path)!;\n        }\n        return null;\n    }\n    public destorySpriteFrameByPath(path: string): void {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadSpriteFrameWithBundleKey.has(bundleName) && this.loadSpriteFrameWithBundleKey.get(bundleName)!.has(path)) {\n            //不能释放到 refCount ==0 因为 spriteFrame类资源的释放。 需要在离开游戏的时候被释放掉。也就是他的释放是通过bundle来释放的\n            if (this.loadSpriteFrameWithBundleKey.get(bundleName)!.get(path)!.refCount > 1) {\n                this.loadSpriteFrameWithBundleKey.get(bundleName)!.get(path)!.decRef();\n            }\n        }\n    }\n\n    /**\n     * @description: 预加载bundle对应的 prefabs\n     * @param {string} formName\n     */\n    public async preloadBundlePrefab(formName: string) {\n        let data = splitFormName(formName);\n        let bundleName = data.bundle;\n        let prefabName = data.prefabName;\n        if (this.loadPrefabWithBundleKey.has(bundleName) && this.loadPrefabWithBundleKey.get(bundleName)?.has(formName)) {\n            this.loadProgress[formName] = 1;\n            this.calProgress(2);\n            return;\n        }\n        let bundle = this.subGameBundle.get(bundleName);\n        if (bundle == undefined) {\n            console.error(`${bundleName}不存在`);\n            return;\n        }\n        if (!this.loadPrefabWithBundleKey.has(bundleName)) {\n            this.loadPrefabWithBundleKey.set(bundleName, new Map<string, Prefab>());\n        }\n        bundle!.load<Prefab>(prefabName, (loadCnt: number, allCnt: number, item: AssetManager.RequestItem) => {\n            this.loadProgress[formName] = loadCnt / allCnt;\n            this.calProgress(0);\n        }, (err, prefab: Prefab) => {\n            if (err != null) {\n                console.log(err);\n                console.warn(`${formName}加载失败`);\n            } else {\n                this.loadProgress[formName] = 1;\n                if (!this.loadPrefabWithBundleKey.has(bundleName)) {\n                    this.loadPrefabWithBundleKey.set(bundleName, new Map<string, Prefab>());\n                }\n                this.loadPrefabWithBundleKey.get(bundleName)!.set(formName, prefab);\n                this.loadPrefabWithBundleKey.get(bundleName)!.get(formName)!.addRef();\n                this.calProgress(1);\n            }\n        });\n    }\n    //获得一个prefab\n    public getPrefabByPath(path: string): Prefab | null {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadPrefabWithBundleKey.has((bundleName)) && this.loadPrefabWithBundleKey.get(bundleName)!.has(path)) {\n            this.loadPrefabWithBundleKey.get(bundleName)!.get(path)!.addRef();\n            return this.loadPrefabWithBundleKey.get(bundleName)!.get(path)!;\n        }\n        return null;\n    }\n    //销毁一个prefab\n    public destoryPrefabByPath(path: string) {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadPrefabWithBundleKey.has(bundleName) && this.loadPrefabWithBundleKey.get(bundleName)!.has(path)) {\n            if (this.loadPrefabWithBundleKey.get(bundleName)!.get(path)!.refCount > 1) {\n                this.loadPrefabWithBundleKey.get(bundleName)!.get(path)!.decRef();\n            }\n        }\n    }\n\n    //加载图集\n    public async preloadBundleSpriteAtlas(filePath: string) {\n        let data = splitFormName(filePath);\n        let bundleName = data.bundle;\n        let spriteAtlasName = data.prefabName;\n\n        if (this.loadSpriteAtlasWithBundleKey.has(bundleName) && this.loadSpriteAtlasWithBundleKey.get(bundleName)?.has(filePath)) {\n            this.loadProgress[filePath] = 1;\n            this.calProgress(2);\n            return;\n        }\n\n\n        let bundle = this.subGameBundle.get(bundleName);\n        if (bundle == undefined) {\n            console.error(`${bundleName}不存在`);\n            return;\n        }\n        if (!this.loadSpriteAtlasWithBundleKey.has(bundleName)) {\n            this.loadSpriteAtlasWithBundleKey.set(bundleName, new Map<string, SpriteAtlas>());\n        }\n        bundle.load<SpriteAtlas>(spriteAtlasName, SpriteAtlas, (loadCnt: number, allCnt: number, item: AssetManager.RequestItem) => {\n            this.loadProgress[filePath] = loadCnt / allCnt;\n            this.calProgress(0);\n        }, (err, spriteAtlas: SpriteAtlas) => {\n            if (err != null) {\n                console.log(err);\n                console.error(`${filePath}加载失败`);\n            } else {\n                this.loadProgress[filePath] = 1;\n                if (!this.loadSpriteAtlasWithBundleKey.has(bundleName)) {\n                    this.loadSpriteAtlasWithBundleKey.set(bundleName, new Map<string, SpriteAtlas>());\n                }\n                this.loadSpriteAtlasWithBundleKey.get(bundleName)!.set(filePath, spriteAtlas);\n                this.loadSpriteAtlasWithBundleKey.get(bundleName)!.get(filePath)!.addRef();\n                this.calProgress(1);\n            }\n        });\n        //});\n    }\n    //获取图集\n    public getSpriteAtlasByPath(path: string): SpriteAtlas | null {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadSpriteAtlasWithBundleKey.has(bundleName) && this.loadSpriteAtlasWithBundleKey.get(bundleName)!.has(path)) {\n            this.loadSpriteAtlasWithBundleKey.get(bundleName)!.get(path)!.addRef();\n            return this.loadSpriteAtlasWithBundleKey.get(bundleName)!.get(path)!;\n        }\n        return null;\n    }\n    //销毁图集\n    public destorySpriteAtlasByPath(path: string): void {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadSpriteAtlasWithBundleKey.has(bundleName) && this.loadSpriteAtlasWithBundleKey.get(bundleName)!.has(path)) {\n            //不能释放到refCount <=0 \n            if (this.loadSpriteAtlasWithBundleKey.get(bundleName)!.get(path)!.refCount > 1) {\n                this.loadSpriteAtlasWithBundleKey.get(bundleName)!.get(path)!.decRef();\n            }\n        }\n    }\n\n    /**\n * @description: 预加载bundle对应的 spine\n * @param {string} formName\n */\n    public async preloadBundleSpine(formName: string) {\n        let data = splitFormName(formName);\n        let bundleName = data.bundle;\n        let prefabName = data.prefabName;\n        if (this.loadSpineWithBundleKey.has(bundleName) && this.loadSpineWithBundleKey.get(bundleName)?.has(formName)) {\n            this.loadProgress[formName] = 1;\n            this.calProgress(2);\n            return;\n        }\n        let bundle = this.subGameBundle.get(bundleName);\n        if (bundle == undefined) {\n            console.error(`${bundleName}不存在`);\n            return;\n        }\n        if (!this.loadSpineWithBundleKey.has(bundleName)) {\n            this.loadSpineWithBundleKey.set(bundleName, new Map<string, sp.SkeletonData>());\n        }\n        bundle!.load<sp.SkeletonData>(prefabName, (loadCnt: number, allCnt: number, item: AssetManager.RequestItem) => {\n            this.loadProgress[formName] = loadCnt / allCnt;\n            this.calProgress(0);\n        }, (err, skeletionData: sp.SkeletonData) => {\n            if (err != null) {\n                console.log(err);\n                console.warn(`${formName}加载失败`);\n            } else {\n                this.loadProgress[formName] = 1;\n                if (!this.loadSpineWithBundleKey.has(bundleName)) {\n                    this.loadSpineWithBundleKey.set(bundleName, new Map<string, sp.SkeletonData>());\n                }\n                this.loadSpineWithBundleKey.get(bundleName)!.set(formName, skeletionData);\n                this.loadSpineWithBundleKey.get(bundleName)!.get(formName)!.addRef();\n                this.calProgress(1);\n            }\n        });\n    }\n    //获得一个spine\n    public lazyLoadySpine(path: string): Promise<sp.SkeletonData | null> {\n        return new Promise<sp.SkeletonData | null>((resolve, reject) => {\n            let data = splitFormName(path);\n            let bundleName = data.bundle;\n            let fileName = data.prefabName;\n            if (this.loadSpineWithBundleKey.has(bundleName) && this.loadSpineWithBundleKey.get(bundleName)!.has(path)) {\n                //如果缓存中有直接拿出来用\n                this.loadSpineWithBundleKey.get(bundleName)!.get(path)!.addRef();\n                resolve(this.loadSpineWithBundleKey.get(bundleName)!.get(path)!);\n                return;\n            }\n            let bundle = assetManager.getBundle(bundleName);\n            if (bundle == null) {\n                resolve(null);\n            } else {\n                bundle.load<sp.SkeletonData>(fileName, sp.SkeletonData, (err, spine: sp.SkeletonData) => {\n                    if (err != null) {\n                        console.error(err);\n                        resolve(null);\n                    } else {\n                        if (!this.loadSpineWithBundleKey.has(bundleName)) {\n                            this.loadSpineWithBundleKey.set(bundleName, new Map<string, sp.SkeletonData>());\n                        }\n                        this.loadSpineWithBundleKey.get(bundleName)!.set(path, spine);\n                        this.loadSpineWithBundleKey.get(bundleName)!.get(path)!.addRef();\n                        resolve(spine);\n                    }\n                })\n            }\n        })\n    }\n\n    //销毁一个Spine\n    public destorySpineByPath(path: string) {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadSpineWithBundleKey.has(bundleName) && this.loadSpineWithBundleKey.get(bundleName)!.has(path)) {\n            if (this.loadSpineWithBundleKey.get(bundleName)!.get(path)!.refCount > 1) {\n                this.loadSpineWithBundleKey.get(bundleName)!.get(path)!.decRef();\n            }\n        }\n    }\n\n    //加载音频\n    public async preloadBundleAudioClip(filePath: string) {\n        let data = splitFormName(filePath);\n        let bundleName = data.bundle;\n        let audioClipName = data.prefabName;\n        if (this.loadAudioClipWithBundleKey.has(bundleName) && this.loadAudioClipWithBundleKey.get(bundleName)?.has(filePath)) {\n            this.loadProgress[filePath] = 1;\n            this.calProgress(2);\n            return;\n        }\n        let bundle = this.subGameBundle.get(bundleName);\n        if (bundle == undefined) {\n            console.error(`${bundleName}不存在`);\n            return;\n        }\n        if (!this.loadAudioClipWithBundleKey.has(bundleName)) {\n            this.loadAudioClipWithBundleKey.set(bundleName, new Map<string, AudioClip>());\n        }\n        bundle.load<AudioClip>(audioClipName, (loadCnt: number, allCnt: number, item: AssetManager.RequestItem) => {\n            this.loadProgress[filePath] = loadCnt / allCnt;\n            this.calProgress(0);\n        }, (err, clip: AudioClip) => {\n            if (err != null) {\n                console.error(`${filePath}加载失败`);\n            } else {\n                this.loadProgress[filePath] = 1;\n                if (!this.loadAudioClipWithBundleKey.has(bundleName)) {\n                    this.loadAudioClipWithBundleKey.set(bundleName, new Map<string, AudioClip>());\n                }\n                this.loadAudioClipWithBundleKey.get(bundleName)!.set(filePath, clip);\n                this.loadAudioClipWithBundleKey.get(bundleName)!.get(filePath)!.addRef();\n                this.calProgress(1);\n            }\n        });\n        //});\n    }\n\n    //根据路径获取Audio Clip\n    public getAudioClipByPath(path: string): AudioClip | null {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadAudioClipWithBundleKey.has(bundleName) && this.loadAudioClipWithBundleKey.get(bundleName)!.has(path)) {\n            this.loadAudioClipWithBundleKey.get(bundleName)!.get(path)!.addRef();\n            return this.loadAudioClipWithBundleKey.get(bundleName)!.get(path)!;\n        }\n        return null;\n    }\n\n    //销毁音频\n    public destoryAudioClipByPath(path: string): void {\n        let data = splitFormName(path);\n        let bundleName = data.bundle;\n        if (this.loadAudioClipWithBundleKey.has(bundleName) && this.loadAudioClipWithBundleKey.get(bundleName)!.has(path)) {\n            if (this.loadAudioClipWithBundleKey.get(bundleName)!.get(path)!.refCount > 1) {\n                this.loadAudioClipWithBundleKey.get(bundleName)!.get(path)!.decRef();\n            }\n        }\n    }\n\n    /**\n     * 释放当前bundle中的所有动态加载的资源\n     * @param list \n     */\n    public releaseAllResByList(list: Map<string, number>) {\n\n        let bName = \"\";\n        for (let key of list.keys()) {\n            let resData = splitFormName(key);\n            let bundleName = resData.bundle;\n            bName = bundleName;\n            if (list.get(key) == ResType.ResType_SpriteFrame) {\n                if (!this.loadSpriteFrameWithBundleKey.has(bundleName)) {\n                    continue;\n                }\n\n                if (!this.loadSpriteFrameWithBundleKey.get(bName)!.has(key)) {\n                    continue;\n                }\n                while (this.loadSpriteFrameWithBundleKey.get(bName)!.get(key)!.refCount > 0) {\n                    this.loadSpriteFrameWithBundleKey.get(bName)!.get(key)!.decRef();\n                }\n                this.loadSpriteFrameWithBundleKey.get(bName)!.delete(key);\n            } else if (list.get(key) == ResType.ResType_SpriteAtlas) {\n                //释放图集资源\n                if (!this.loadSpriteAtlasWithBundleKey.has(bundleName)) {\n                    continue;\n                }\n                if (!this.loadSpriteAtlasWithBundleKey.get(bName)!.has(key)) {\n                    continue;\n                }\n                while (this.loadSpriteAtlasWithBundleKey.get(bName)!.get(key)!.refCount > 0) {\n                    this.loadSpriteAtlasWithBundleKey.get(bName)!.get(key)!.decRef();\n                }\n                this.loadSpriteAtlasWithBundleKey.get(bName)!.delete(key);\n            } else if (list.get(key) == ResType.ResType_Prefab) {\n                //预制体资源\n                if (!this.loadPrefabWithBundleKey.has(bundleName)) {\n                    continue;\n                }\n                if (!this.loadPrefabWithBundleKey.get(bName)!.has(key)) {\n                    continue;\n                }\n                while (this.loadPrefabWithBundleKey.get(bName)!.get(key)!.refCount > 0) {\n                    this.loadPrefabWithBundleKey.get(bName)!.get(key)!.decRef();\n                }\n                this.loadPrefabWithBundleKey.get(bName)!.delete(key);\n            } else if (list.get(key) == ResType.ResType_AudioClip) {\n                //音频资源\n                if (!this.loadAudioClipWithBundleKey.has(bundleName)) {\n                    continue;\n                }\n                bName = bundleName;\n                if (!this.loadAudioClipWithBundleKey.get(bName)!.has(key)) {\n                    continue;\n                }\n                while (this.loadAudioClipWithBundleKey.get(bName)!.get(key)!.refCount > 0) {\n                    this.loadAudioClipWithBundleKey.get(bName)!.get(key)!.decRef();\n                }\n                this.loadAudioClipWithBundleKey.get(bName)!.delete(key);\n            }\n\n        }\n        if (bName != \"\") {\n            this.loadPrefabWithBundleKey.delete(bName);\n            this.loadAudioClipWithBundleKey.delete(bName);\n            this.loadSpriteFrameWithBundleKey.delete(bName);\n            this.loadSpriteAtlasWithBundleKey.delete(bName);\n\n            if (this.subGameBundle.has(bName)) {\n                this.subGameBundle.delete(bName);\n            }\n            //调用了 releaseAll 应该不需要再 desRef() 方法了。源码中tryRelease就是将\n            //这里releaaseAll还不能调用，如果调用，第二次加载sprite的时候还是有问题的。 暂时不调用，但是回头要处理一下\n            //需要调用releaseAll否则有的资源释放不掉\n            if (assetManager.getBundle(bName) != null) {\n                assetManager.getBundle(bName)!.releaseAll();\n                assetManager.removeBundle(assetManager.getBundle(bName)!);\n            }\n            console.log(\"releaseAll执行了-----\", bName);\n        }\n    }\n\n    /**\n     * @description: 计算加载进度 更新进度条\n     * @param {number} state\n     */\n    public calProgress(state: number) {\n        let progress = 0;\n        let allCnt = 0;\n        for (let key in this.loadProgress) {\n            allCnt = allCnt + 1;\n            progress = progress + this.loadProgress[key];\n        }\n        if (this.preloadProgressCallBack != null) {\n            this.preloadProgressCallBack(progress / allCnt);\n        }\n        if (progress / allCnt == 1 && state == 1) {\n            this.preloadProgressCallBack = null;\n            if (this.preloadCompleteCallBack != null) {\n                this.preloadCompleteCallBack();\n                this.preloadCompleteCallBack = null;\n            }\n        }\n    }\n\n    /**\n     * 1:优先判定常驻窗体中有没有节点\n     * 需要先判定对应的bundle是否加载了\n     * 切割formName为 bundleName prefabName\n     * todo dev 这里以后配置成远程包的时候还需要处理为 远程资源的加载\n     * @param formName \n     */\n    public async loadForm(formName: string): Promise<Prefab | null> {\n        return new Promise((resolve, reject) => {\n\n            if (!formName || formName.length <= 0) {\n                resolve(null);\n            }\n            let data = splitFormName(formName);\n            let bundleName = data.bundle;\n            let prefabName = data.prefabName;\n\n            //如果缓存中有 则直接从缓存中获取，一般情况就是到这里就返回了。因为进入 字游戏或者大厅的时候就会预加载的\n            if (this.loadPrefabWithBundleKey.has(bundleName) && this.loadPrefabWithBundleKey.get(bundleName)!.has(formName)) {\n                resolve(this.loadPrefabWithBundleKey.get(bundleName)!.get(formName)!)\n                return;\n            }\n\n            assetManager.loadBundle(bundleName, (err, bundle: AssetManager.Bundle) => {\n                if (err != null) {\n                    error(`${bundleName}加载失败`);\n                    resolve(null);\n                    return;\n                }\n                this.subGameBundle.set(bundleName, bundle);\n                if (!this.loadPrefabWithBundleKey.has(bundleName)) {\n                    this.loadPrefabWithBundleKey.set(bundleName, new Map<string, Prefab>());\n                }\n                bundle.load<Prefab>(prefabName, (err, prefab: Prefab) => {\n                    if (err != null) {\n                        error(`${prefabName}加载失败`);\n                        resolve(null);\n                        return;\n                    }\n                    //每加载一次prefab就保存一下。\n                    //this.prefabs[formName] = prefab;\n                    if (!this.loadPrefabWithBundleKey.has(bundleName)) {\n                        this.loadPrefabWithBundleKey.set(bundleName, new Map<string, Prefab>());\n                    }\n                    this.loadPrefabWithBundleKey.get(bundleName)?.set(formName, prefab);\n                    prefab.addRef();\n                    resolve(prefab);\n                });\n            });\n        });\n    }\n\n    //销毁一个form对应的一个资源\n    public destoryForm(formName: string) {\n        if (formName == null || formName == undefined || formName.length <= 0) {\n            return;\n        }\n        console.log(`destoryForm${formName}`);\n        let data = splitFormName(formName);\n        if (this.loadPrefabWithBundleKey.has(data.bundle) && this.loadPrefabWithBundleKey.get(data.bundle)!.has(formName)) {\n            //窗体被销毁减少引用计数\n            if (this.loadPrefabWithBundleKey.get(data.bundle)!.get(formName)!.refCount > 1) {\n                this.loadPrefabWithBundleKey.get(data.bundle)!.get(formName)!.decRef();\n            }\n        }\n    }\n}\n\n"]}