{"version":3,"sources":["file:///Users/super_javan/cocoscreator/littleBeastFight3.6/assets/Battle/Script/games/utils/TweenUtils.ts"],"names":["TweenUtil","tween","flip","node","duration","onComplete","Promise","res","_tween","time","scale","getScale","skewY","x","parallel","to","easing","call","setScale","start"],"mappings":";;;yEASqBA,S;;;;;;;;;AATZC,MAAAA,K,OAAAA,K;;;;;;;;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;yBACqBD,S,GAAN,MAAMA,SAAN,CAAgB;AAE3B;AACJ;AACA;AACA;AACA;AACA;AACsB,eAAJE,IAAI,CAACC,IAAD,EAAaC,QAAb,EAA+BC,UAA/B,EAAqE;AACnF,iBAAO,IAAIC,OAAJ,CAAkBC,GAAG,IAAI;AAC5B,gBAAMC,MAAM,GAAGP,KAAf;AAAA,gBACIQ,IAAI,GAAGL,QAAQ,GAAG,CADtB;AAAA,gBAEIM,KAAK,GAAGP,IAAI,CAACQ,QAAL,EAFZ;AAAA,gBAGIC,KAAK,GAAGF,KAAK,CAACG,CAAN,GAAU,CAAV,GAAc,EAAd,GAAmB,CAAC,EAHhC;;AAKAL,YAAAA,MAAM,CAACL,IAAD,CAAN,CACKW,QADL,CAEQN,MAAM,GAAGO,EAAT,CAAYN,IAAZ,EAAkB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAlB,EAAgC;AAAEM,cAAAA,MAAM,EAAE;AAAV,aAAhC,CAFR,EAGQR,MAAM,GAAGO,EAAT,CAAYN,IAAZ,EAAkB;AAAEG,cAAAA,KAAK,EAAE,CAACA;AAAV,aAAlB,EAAqC;AAAEI,cAAAA,MAAM,EAAE;AAAV,aAArC,CAHR,EAKKC,IALL,CAKU,MAAM,CACX,CANL,EAOKH,QAPL,CAQQN,MAAM,GAAGO,EAAT,CAAYN,IAAZ,EAAkB;AAAEC,cAAAA,KAAK,EAAE,CAACA,KAAK,CAACG;AAAhB,aAAlB,EAAuC;AAAEG,cAAAA,MAAM,EAAE;AAAV,aAAvC,CARR,EASQR,MAAM,GAAGO,EAAT,CAAYN,IAAZ,EAAkB;AAAEG,cAAAA,KAAK,EAAE;AAAT,aAAlB,EAAgC;AAAEI,cAAAA,MAAM,EAAE;AAAV,aAAhC,CATR,EAWKC,IAXL,CAWU,MAAM;AACRd,cAAAA,IAAI,CAACe,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AACAb,cAAAA,UAAU,IAAIA,UAAU,EAAxB;AACAE,cAAAA,GAAG;AACN,aAfL,EAgBKY,KAhBL;AAiBH,WAvBM,CAAP;AAwBH;;AAjC0B,O","sourcesContent":["import { tween, Node } from \"cc\";\n\n/*\n * @Description: \n * @Author: Super_Javan\n * @Date: 2022-12-02 15:07:23\n * @LastEditTime: 2022-12-02 16:54:24\n * @LastEditors: Super_Javan\n */\nexport default class TweenUtil {\n\n    /**\n     * 水平翻转（卡片翻转）\n     * @param node 节点\n     * @param duration 总时长\n     * @param onComplete 完成回调\n     */\n    public static flip(node: Node, duration: number, onComplete?: Function): Promise<void> {\n        return new Promise<void>(res => {\n            const _tween = tween,\n                time = duration / 2,\n                scale = node.getScale(),\n                skewY = scale.x > 0 ? 20 : -20;\n\n            _tween(node)\n                .parallel(\n                    _tween().to(time, { scale: 0 }, { easing: 'quadIn' }),\n                    _tween().to(time, { skewY: -skewY }, { easing: 'quadOut' }),\n                )\n                .call(() => {\n                })\n                .parallel(\n                    _tween().to(time, { scale: -scale.x }, { easing: 'quadOut' }),\n                    _tween().to(time, { skewY: 0 }, { easing: 'quadIn' }),\n                )\n                .call(() => {\n                    node.setScale(1, 1, 1);\n                    onComplete && onComplete();\n                    res();\n                })\n                .start();\n        });\n    }\n\n}\n"]}