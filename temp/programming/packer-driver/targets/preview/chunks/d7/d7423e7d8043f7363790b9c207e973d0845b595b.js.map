{"version":3,"sources":["file:///Users/super_javan/cocoscreator/littleBeastFight3.6/assets/Battle/Script/UIBattle.ts"],"names":["_decorator","Node","Button","Component","EventMgr","LogicEvent","UIScreen","Config","MoveCardDTO","OpenCardDTO","FireKit","GameEngine","GameEvent","HumanPlayer","PlayerManager","UICard","TweenUtil","ccclass","property","UIBattle","type","_engine","cards","chairIds","_meChair","_meId","_meColor","_locked","fromIndex","INVALID_INDEX","_iconMapping","isEngross","openResultLogic","openResultVO","index","card","clearSelectStyle","updateOpenCard","updateAndSelectStyle","sitDownLogic","sitDownVO","chair","userId","confirmColorLogic","confirmColorVO","color","console","log","operationNotifyLogic","operationNotifyVO","moveResultLogic","moveResultVO","fromCard","toIndex","toCard","updateStyle","NONE_CARD","onShow","init","eventRegister","enter","inst","create","use","HUMAN_FIRE","onGroup","SIT_DOWN","START_GAME","startGameLogic","OPEN_RESULT","CONFIRM_COLOR","OPERATION_NOTIFY","MOVE_RESULT","startGameVo","btnCards","length","clickEventHandler","EventHandler","target","node","component","handler","customEventData","String","button","addComponent","getChildByName","clickEvents","push","callback","event","getComponent","row","Math","floor","col","DARK","open","canMove","move","cardTemp","getCardItemTemp","flip","i","element","Number","UICardCom","refreshSprite","active","onBtnBackLobby","closeSelf","Instance","emit","ENTER_HALL_FROM_GAMES"],"mappings":"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","sourcesContent":["import { _decorator, Node, Button, Component, TiledUserNodeData, Sprite, SpriteFrame } from \"cc\";\nimport EventMgr from \"../../Script/Base/EventMgr\";\nimport { ResMgr } from \"../../Script/Base/ResMgr\";\nimport { LogicEvent } from \"../../Script/Games/LogicEvent\";\nimport { UIScreen } from \"../../Script/UIFrame/UIFrom\";\nimport Config from \"./games/Config\";\nimport MoveCardDTO from \"./games/dto/MoveCardDTO\";\nimport OpenCardDTO from \"./games/dto/OpenCardDTO\";\nimport FireKit from \"./games/fire/FireKit\";\nimport GameEngine from \"./games/GameEngine\";\nimport GameEvent from \"./games/GameEvent\";\nimport HumanPlayer from \"./games/HumanPlayer\";\nimport PlayerManager from \"./games/PlayerManager\";\nimport UICard from \"./games/UI/UICard\";\nimport TweenUtil from \"./games/utils/TweenUtils\";\nimport ConfirmColorVO from \"./games/vo/ConfirmColorVO\";\nimport MoveResultVO from \"./games/vo/MoveResultVO\";\nimport OpenResultVO from \"./games/vo/OpenResultVO\";\nimport OperationNotifyVO from \"./games/vo/OperationNotifyVO\";\nimport SitDownVO from \"./games/vo/SitDownVO\";\nimport StartGameVO from \"./games/vo/StartGameVO\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIBattle')\nexport class UIBattle extends UIScreen {\n\n    /**\n     * 引擎\n     */\n    private _engine: GameEngine;\n    /**\n     * 当前牌面的牌\n     */\n    private cards: number[];\n    /**\n     * Chair -> ID\n     */\n    private chairIds: { [chair: number]: number } = {};\n    /**\n     * 自己的编号\n     */\n    private _meChair: number;\n    /**\n     * 自己的游戏ID\n     */\n    private _meId: number = 1001;\n    /**\n     * 颜色\n     */\n    private _meColor: number;\n    /**\n     * 锁定状态\n     */\n    private _locked: boolean = true;\n    /**\n     * 开始的位置\n     */\n    private fromIndex: number = GameEngine.INVALID_INDEX;\n\n    @property(Node)\n    UIGames: Node = null\n\n    private _iconMapping: { [key: number]: string; } = {\n        0x00: \"蓝鼠\",\n        0x01: \"蓝猫\",\n        0x02: \"蓝狗\",\n        0x03: \"蓝狼\",\n        0x04: \"蓝豹\",\n        0x05: \"蓝虎\",\n        0x06: \"蓝狮\",\n        0x07: \"蓝象\",\n        0x10: \"红鼠\",\n        0x11: \"红猫\",\n        0x12: \"红狗\",\n        0x13: \"红狼\",\n        0x14: \"红豹\",\n        0x15: \"红虎\",\n        0x16: \"红狮\",\n        0x17: \"红象\"\n    };\n    isEngross = false;\n\n    @property({ type: [Node] })\n    btnCards: Node[] = [];\n\n    async onShow(...params: any) {\n        this.init();\n        this.eventRegister();\n\n        this._engine.enter(PlayerManager.inst().create(new HumanPlayer(this._meId, \"鸡哥\")));// 进入游戏\n    }\n\n    init() {\n        this._engine = new GameEngine();\n    }\n\n    eventRegister() {\n        FireKit.use(Config.HUMAN_FIRE).onGroup(GameEvent.SIT_DOWN, this.sitDownLogic, this);\n        FireKit.use(Config.HUMAN_FIRE).onGroup(GameEvent.START_GAME, this.startGameLogic, this);\n        FireKit.use(Config.HUMAN_FIRE).onGroup(GameEvent.OPEN_RESULT, this.openResultLogic, this);\n        FireKit.use(Config.HUMAN_FIRE).onGroup(GameEvent.CONFIRM_COLOR, this.confirmColorLogic, this);\n        FireKit.use(Config.HUMAN_FIRE).onGroup(GameEvent.OPERATION_NOTIFY, this.operationNotifyLogic, this);\n        FireKit.use(Config.HUMAN_FIRE).onGroup(GameEvent.MOVE_RESULT, this.moveResultLogic, this);\n        // FireKit.use(Config.HUMAN_FIRE).onGroup(GameEvent.END_GAME, this.endGameLogic, this);\n    }\n\n    startGameLogic(startGameVo: StartGameVO) {\n        console.log('startGameVo.chair:', startGameVo.chair)\n        this.cards = startGameVo.cards;\n        this._locked = startGameVo.chair != this._meChair;\n        for (let index = 0; index < this.btnCards.length; index++) {\n            let clickEventHandler = new Component.EventHandler();\n            clickEventHandler.target = this.node;\n            clickEventHandler.component = 'UIBattle';\n            clickEventHandler.handler = 'callback';\n            clickEventHandler.customEventData = String(index);\n            let button = this.btnCards[index].addComponent(Button)\n            this.btnCards[index].getChildByName('Sprite').addComponent(UICard)\n            button.clickEvents.push(clickEventHandler);\n        }\n    }\n\n    callback(event, customEventData) {\n        let node = event.target;\n        let button = node.getComponent(Button);\n        let index = customEventData;\n        let row = Math.floor(index / 4);\n        let col = index % 4;\n        console.log('row:' + row + ',col:' + col);\n        console.log(this._locked)\n        if (!this._locked) {\n            let card = this.cards[index];\n            let color = card >> 4;//判断花色\n\n            if (color === GameEngine.DARK) {\n                this._engine.open(new OpenCardDTO(this._meChair, index));\n            } else {\n                if (this.fromIndex == GameEngine.INVALID_INDEX) {\n                    if (color == this._meColor) {\n                        // 选中了自己添加选中状态\n                        this.updateAndSelectStyle(index);\n                        this.fromIndex = index;\n                    }\n                } else {\n                    if (this._engine.canMove(this.fromIndex, index, this.cards)) {\n                        this._engine.move(new MoveCardDTO(this._meChair, this.fromIndex, index));\n                        this.fromIndex = GameEngine.INVALID_INDEX;\n                        this.clearSelectStyle();    // 清除选中状态\n                    } else {\n                        //选中后 再切换到别的牌\n                        if (color == this._meColor) {\n                            this.updateAndSelectStyle(index);\n                            this.fromIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     *\n     * @param openResultVO\n     */\n    openResultLogic = (openResultVO: OpenResultVO) => {\n        this.cards[openResultVO.index] = openResultVO.card;\n        this.clearSelectStyle();\n        this.updateOpenCard(openResultVO);\n        this.updateAndSelectStyle(openResultVO.index);\n        this.fromIndex = GameEngine.INVALID_INDEX;\n    };\n    async updateOpenCard(openResultVO) {\n        console.log('openResultVO:', openResultVO)\n        let card = openResultVO.card;\n        let index = openResultVO.index;\n        let cardTemp = this.getCardItemTemp(index);\n\n        await TweenUtil.flip(cardTemp.getChildByName('Sprite'), 0.8, () => {\n            this.updateStyle(index, card);\n        });\n    }\n    getCardItemTemp(index: any) {\n        for (let i = 0; i < this.btnCards.length; i++) {\n            const element = this.btnCards[i];\n            if (i == Number(index))\n                return element;\n        }\n    }\n\n    /**\n     * 更新牌的样式\n     * @param index\n     */\n    async updateStyle(index, card) {\n        let cardTemp = this.getCardItemTemp(index);\n        let UICardCom = cardTemp.getChildByName('Sprite').getComponent(UICard)\n        UICardCom.refreshSprite(card)\n    }\n\n    /**\n     * 增加选择状态\n     * @param index\n     */\n    private updateAndSelectStyle(index: number) {\n        this.clearSelectStyle();            // 先清除选中\n        for (let i = 0; i < this.btnCards.length; i++) {\n            const card = this.btnCards[i]\n            if (i === index) {\n                card.getChildByName('ChoosedMask').active = true\n            }\n        }\n    }\n\n    /**\n     * 清除选中状态\n     */\n    private clearSelectStyle() {\n        for (let i = 0; i < this.btnCards.length; i++) {\n            const card = this.btnCards[i]\n            card.getChildByName('ChoosedMask').active = false\n        }\n    }\n\n    /**\n     *\n     * @param sitDownVO\n     */\n    sitDownLogic = (sitDownVO: SitDownVO) => {\n        this.chairIds[sitDownVO.chair] = sitDownVO.userId;\n        if (sitDownVO.userId == this._meId) {   //如果是自己\n            this._meChair = sitDownVO.chair;\n        }\n    };\n\n    /**\n     *\n     * @param confirmColorVO\n     */\n    confirmColorLogic = (confirmColorVO: ConfirmColorVO) => {\n        if (confirmColorVO.chair == this._meChair) {\n            this._meColor = confirmColorVO.color;\n            console.log('我方颜色:', this._meColor)\n        }\n    };\n\n    /**\n     *\n     * @param operationNotifyVO\n     */\n    operationNotifyLogic = (operationNotifyVO: OperationNotifyVO) => {\n        this._locked = operationNotifyVO.chair != this._meChair;\n    };\n\n    /**\n     *\n     * @param moveResultVO\n     */\n    moveResultLogic = (moveResultVO: MoveResultVO) => {\n        this.cards[moveResultVO.fromIndex] = moveResultVO.fromCard;\n        this.cards[moveResultVO.toIndex] = moveResultVO.toCard;\n        this.updateStyle(moveResultVO.fromIndex, moveResultVO.fromCard);\n        this.updateStyle(moveResultVO.toIndex, moveResultVO.toCard);\n        if (this.cards[moveResultVO.toIndex] != GameEngine.NONE_CARD) {\n            this.updateAndSelectStyle(moveResultVO.toIndex);\n        }\n        this.fromIndex = GameEngine.INVALID_INDEX;\n    };\n\n    async onBtnBackLobby() {\n        await this.closeSelf();\n        EventMgr.Instance.emit(LogicEvent.ENTER_HALL_FROM_GAMES);\n    }\n}"]}